version: "3.8"
services:
  proxy:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./Config/nginx.conf:/etc/nginx/nginx.conf
      - proxy_logs:/var/log/nginx
    networks:
      - public
      - private
    depends_on:
      - frontend
      - backend

  frontend:
    build: ./Frontend
    networks:
      - private
    deploy:
      replicas: 1

  backend:
    build: ./Backend
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      PORT: ${PORT}
    volumes:
      - backend_logs:/var/log/backend
    networks:
      - private
    deploy:
      replicas: 2

  database:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./Database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - private
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./Config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - private

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginxexporter
    command:
      - '-nginx.scrape-uri=http://proxy/nginx_status'
    ports:
      - 9113:9113
    networks:
      - private
  

  loki:
    image: grafana/loki
    container_name: loki
    volumes:
      - ./Config/loki-config.yaml:/etc/loki/config.yaml  # Loki config file
    networks:
      - private
    restart: always

  promtail:
    image: grafana/promtail
    container_name: promtail
    volumes:
      -  proxy_logs:/var/log/nginx
      -  backend_logs:/var/log/backend
      - ./Config/promtail-config.yaml:/etc/promtail/config.yml  # Promtail config file
    networks:
      - private
    restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"  # Grafana web UI
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"  # Set Grafana admin password
    volumes:
      - grafana-data:/var/lib/grafana  # Persist Grafana data
    networks:
      - public
      - private
    restart: always


  

networks:
  public:
    driver: bridge

  private:
    driver: bridge
    internal: true

volumes:
  grafana-data:
  prometheus_data:
  proxy_logs:
  backend_logs:
