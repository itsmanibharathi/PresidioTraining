{
    "check_type": "terraform",
    "results": {
        "passed_checks": [
            {
                "check_id": "CKV_AWS_93",
                "bc_check_id": "BC_AWS_S3_24",
                "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "policy"
                    ]
                },
                "code_block": [
                    [
                        27,
                        "resource \"aws_s3_bucket\" \"manit1\" {\n"
                    ],
                    [
                        28,
                        "  bucket = \"manit1\"\n"
                    ],
                    [
                        29,
                        "  tags = merge(local.common_tags, {\n"
                    ],
                    [
                        30,
                        "    Name = \"manit1\"\n"
                    ],
                    [
                        31,
                        "  })\n"
                    ],
                    [
                        32,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task1/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task1/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task1/main.tf",
                "file_line_range": [
                    27,
                    32
                ],
                "resource": "aws_s3_bucket.manit1",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                "fixed_definition": null,
                "entity_tags": {
                    "owner": "mani",
                    "Name": "manit1"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-24",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task1/main.tf",
                "breadcrumbs": {
                    "tags": [
                        {
                            "type": "locals",
                            "name": "common_tags",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task1/main.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_93",
                "bc_check_id": "BC_AWS_S3_24",
                "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "policy"
                    ]
                },
                "code_block": [
                    [
                        34,
                        "resource \"aws_s3_bucket\" \"manit2\" {\n"
                    ],
                    [
                        35,
                        "  provider = aws.west\n"
                    ],
                    [
                        36,
                        "  bucket = \"manit2\"\n"
                    ],
                    [
                        37,
                        "  tags = merge(local.common_tags, {\n"
                    ],
                    [
                        38,
                        "    Name = \"manit2\"\n"
                    ],
                    [
                        39,
                        "  })\n"
                    ],
                    [
                        40,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task1/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task1/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task1/main.tf",
                "file_line_range": [
                    34,
                    40
                ],
                "resource": "aws_s3_bucket.manit2",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                "fixed_definition": null,
                "entity_tags": {
                    "owner": "mani",
                    "Name": "manit2"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-24",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task1/main.tf",
                "breadcrumbs": {
                    "tags": [
                        {
                            "type": "locals",
                            "name": "common_tags",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task1/main.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_41",
                "bc_check_id": "BC_AWS_SECRETS_5",
                "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        11,
                        "provider \"aws\" {\n"
                    ],
                    [
                        12,
                        "  region = \"us-east-1\"\n"
                    ],
                    [
                        13,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task1/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task1/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task1/main.tf",
                "file_line_range": [
                    11,
                    13
                ],
                "resource": "aws.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.provider.aws.credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-5",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task1/main.tf"
            },
            {
                "check_id": "CKV_AWS_41",
                "bc_check_id": "BC_AWS_SECRETS_5",
                "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        15,
                        "provider \"aws\" {\n"
                    ],
                    [
                        16,
                        "  alias  = \"west\"\n"
                    ],
                    [
                        17,
                        "  region = \"us-west-2\"\n"
                    ],
                    [
                        18,
                        "  \n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task1/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task1/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task1/main.tf",
                "file_line_range": [
                    15,
                    19
                ],
                "resource": "aws.west",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.provider.aws.credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-5",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task1/main.tf"
            },
            {
                "check_id": "CKV_AWS_130",
                "bc_check_id": "BC_AWS_NETWORKING_53",
                "check_name": "Ensure VPC subnets do not assign public IP by default",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "map_public_ip_on_launch"
                    ]
                },
                "code_block": [
                    [
                        22,
                        "resource \"aws_subnet\" \"mani_subnet\" {\n"
                    ],
                    [
                        23,
                        "  vpc_id     = aws_vpc.mani_vpc.id\n"
                    ],
                    [
                        24,
                        "  cidr_block = var.public_subnet_cidr\n"
                    ],
                    [
                        25,
                        "  tags = {\n"
                    ],
                    [
                        26,
                        "    Name = \"mani_subnet_pub\"\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    22,
                    28
                ],
                "resource": "aws_subnet.mani_subnet",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SubnetPublicIP",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mani_subnet_pub"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-vpc-subnets-do-not-assign-public-ip-by-default",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "breadcrumbs": {
                    "cidr_block": [
                        {
                            "type": "variable",
                            "name": "public_subnet_cidr",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/variable.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_260",
                "bc_check_id": "BC_AWS_NETWORKING_67",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "from_port",
                        "to_port",
                        "cidr_ipv4",
                        "cidr_ipv6"
                    ]
                },
                "code_block": [
                    [
                        57,
                        "resource \"aws_security_group\" \"mani_sg\" {\n"
                    ],
                    [
                        58,
                        "  vpc_id = aws_vpc.mani_vpc.id\n"
                    ],
                    [
                        59,
                        "  tags = {\n"
                    ],
                    [
                        60,
                        "    Name = \"mani_sg\"\n"
                    ],
                    [
                        61,
                        "  }\n"
                    ],
                    [
                        62,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    57,
                    62
                ],
                "resource": "aws_security_group.mani_sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress80",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mani_sg"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf"
            },
            {
                "check_id": "CKV_AWS_24",
                "bc_check_id": "BC_AWS_NETWORKING_1",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "from_port",
                        "to_port",
                        "cidr_ipv4",
                        "cidr_ipv6"
                    ]
                },
                "code_block": [
                    [
                        57,
                        "resource \"aws_security_group\" \"mani_sg\" {\n"
                    ],
                    [
                        58,
                        "  vpc_id = aws_vpc.mani_vpc.id\n"
                    ],
                    [
                        59,
                        "  tags = {\n"
                    ],
                    [
                        60,
                        "    Name = \"mani_sg\"\n"
                    ],
                    [
                        61,
                        "  }\n"
                    ],
                    [
                        62,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    57,
                    62
                ],
                "resource": "aws_security_group.mani_sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mani_sg"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf"
            },
            {
                "check_id": "CKV_AWS_277",
                "bc_check_id": "BC_AWS_NETWORKING_78",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "from_port",
                        "to_port",
                        "cidr_ipv4",
                        "cidr_ipv6"
                    ]
                },
                "code_block": [
                    [
                        57,
                        "resource \"aws_security_group\" \"mani_sg\" {\n"
                    ],
                    [
                        58,
                        "  vpc_id = aws_vpc.mani_vpc.id\n"
                    ],
                    [
                        59,
                        "  tags = {\n"
                    ],
                    [
                        60,
                        "    Name = \"mani_sg\"\n"
                    ],
                    [
                        61,
                        "  }\n"
                    ],
                    [
                        62,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    57,
                    62
                ],
                "resource": "aws_security_group.mani_sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngressAny",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mani_sg"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf"
            },
            {
                "check_id": "CKV_AWS_25",
                "bc_check_id": "BC_AWS_NETWORKING_2",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "from_port",
                        "to_port",
                        "cidr_ipv4",
                        "cidr_ipv6"
                    ]
                },
                "code_block": [
                    [
                        57,
                        "resource \"aws_security_group\" \"mani_sg\" {\n"
                    ],
                    [
                        58,
                        "  vpc_id = aws_vpc.mani_vpc.id\n"
                    ],
                    [
                        59,
                        "  tags = {\n"
                    ],
                    [
                        60,
                        "    Name = \"mani_sg\"\n"
                    ],
                    [
                        61,
                        "  }\n"
                    ],
                    [
                        62,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    57,
                    62
                ],
                "resource": "aws_security_group.mani_sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mani_sg"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf"
            },
            {
                "check_id": "CKV_AWS_260",
                "bc_check_id": "BC_AWS_NETWORKING_67",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "from_port",
                        "to_port",
                        "cidr_blocks",
                        "ipv6_cidr_blocks"
                    ]
                },
                "code_block": [
                    [
                        65,
                        "resource \"aws_security_group_rule\" \"mani_sg_rule\" {\n"
                    ],
                    [
                        66,
                        "    security_group_id = aws_security_group.mani_sg.id\n"
                    ],
                    [
                        67,
                        "    type        = \"ingress\"\n"
                    ],
                    [
                        68,
                        "    from_port   = 22\n"
                    ],
                    [
                        69,
                        "    to_port     = 22\n"
                    ],
                    [
                        70,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        71,
                        "    cidr_blocks = [var.myIP,\"18.206.107.24/29\"]\n"
                    ],
                    [
                        72,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    65,
                    72
                ],
                "resource": "aws_security_group_rule.mani_sg_rule",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress80",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "breadcrumbs": {
                    "cidr_blocks": [
                        {
                            "type": "variable",
                            "name": "myIP",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/variable.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_24",
                "bc_check_id": "BC_AWS_NETWORKING_1",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "from_port",
                        "to_port",
                        "cidr_blocks",
                        "ipv6_cidr_blocks"
                    ]
                },
                "code_block": [
                    [
                        65,
                        "resource \"aws_security_group_rule\" \"mani_sg_rule\" {\n"
                    ],
                    [
                        66,
                        "    security_group_id = aws_security_group.mani_sg.id\n"
                    ],
                    [
                        67,
                        "    type        = \"ingress\"\n"
                    ],
                    [
                        68,
                        "    from_port   = 22\n"
                    ],
                    [
                        69,
                        "    to_port     = 22\n"
                    ],
                    [
                        70,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        71,
                        "    cidr_blocks = [var.myIP,\"18.206.107.24/29\"]\n"
                    ],
                    [
                        72,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    65,
                    72
                ],
                "resource": "aws_security_group_rule.mani_sg_rule",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "breadcrumbs": {
                    "cidr_blocks": [
                        {
                            "type": "variable",
                            "name": "myIP",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/variable.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_277",
                "bc_check_id": "BC_AWS_NETWORKING_78",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "from_port",
                        "to_port",
                        "cidr_blocks",
                        "ipv6_cidr_blocks"
                    ]
                },
                "code_block": [
                    [
                        65,
                        "resource \"aws_security_group_rule\" \"mani_sg_rule\" {\n"
                    ],
                    [
                        66,
                        "    security_group_id = aws_security_group.mani_sg.id\n"
                    ],
                    [
                        67,
                        "    type        = \"ingress\"\n"
                    ],
                    [
                        68,
                        "    from_port   = 22\n"
                    ],
                    [
                        69,
                        "    to_port     = 22\n"
                    ],
                    [
                        70,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        71,
                        "    cidr_blocks = [var.myIP,\"18.206.107.24/29\"]\n"
                    ],
                    [
                        72,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    65,
                    72
                ],
                "resource": "aws_security_group_rule.mani_sg_rule",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngressAny",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "breadcrumbs": {
                    "cidr_blocks": [
                        {
                            "type": "variable",
                            "name": "myIP",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/variable.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_25",
                "bc_check_id": "BC_AWS_NETWORKING_2",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "from_port",
                        "to_port",
                        "cidr_blocks",
                        "ipv6_cidr_blocks"
                    ]
                },
                "code_block": [
                    [
                        65,
                        "resource \"aws_security_group_rule\" \"mani_sg_rule\" {\n"
                    ],
                    [
                        66,
                        "    security_group_id = aws_security_group.mani_sg.id\n"
                    ],
                    [
                        67,
                        "    type        = \"ingress\"\n"
                    ],
                    [
                        68,
                        "    from_port   = 22\n"
                    ],
                    [
                        69,
                        "    to_port     = 22\n"
                    ],
                    [
                        70,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        71,
                        "    cidr_blocks = [var.myIP,\"18.206.107.24/29\"]\n"
                    ],
                    [
                        72,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    65,
                    72
                ],
                "resource": "aws_security_group_rule.mani_sg_rule",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "breadcrumbs": {
                    "cidr_blocks": [
                        {
                            "type": "variable",
                            "name": "myIP",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/variable.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_24",
                "bc_check_id": "BC_AWS_NETWORKING_1",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "from_port",
                        "to_port",
                        "cidr_blocks",
                        "ipv6_cidr_blocks"
                    ]
                },
                "code_block": [
                    [
                        76,
                        "resource \"aws_security_group_rule\" \"mani_sg_rule_80\" {\n"
                    ],
                    [
                        77,
                        "    security_group_id = aws_security_group.mani_sg.id\n"
                    ],
                    [
                        78,
                        "    type        = \"ingress\"\n"
                    ],
                    [
                        79,
                        "    from_port   = 80\n"
                    ],
                    [
                        80,
                        "    to_port     = 80\n"
                    ],
                    [
                        81,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        82,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        83,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    76,
                    83
                ],
                "resource": "aws_security_group_rule.mani_sg_rule_80",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf"
            },
            {
                "check_id": "CKV_AWS_277",
                "bc_check_id": "BC_AWS_NETWORKING_78",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "from_port",
                        "to_port",
                        "cidr_blocks",
                        "ipv6_cidr_blocks"
                    ]
                },
                "code_block": [
                    [
                        76,
                        "resource \"aws_security_group_rule\" \"mani_sg_rule_80\" {\n"
                    ],
                    [
                        77,
                        "    security_group_id = aws_security_group.mani_sg.id\n"
                    ],
                    [
                        78,
                        "    type        = \"ingress\"\n"
                    ],
                    [
                        79,
                        "    from_port   = 80\n"
                    ],
                    [
                        80,
                        "    to_port     = 80\n"
                    ],
                    [
                        81,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        82,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        83,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    76,
                    83
                ],
                "resource": "aws_security_group_rule.mani_sg_rule_80",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngressAny",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf"
            },
            {
                "check_id": "CKV_AWS_25",
                "bc_check_id": "BC_AWS_NETWORKING_2",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "from_port",
                        "to_port",
                        "cidr_blocks",
                        "ipv6_cidr_blocks"
                    ]
                },
                "code_block": [
                    [
                        76,
                        "resource \"aws_security_group_rule\" \"mani_sg_rule_80\" {\n"
                    ],
                    [
                        77,
                        "    security_group_id = aws_security_group.mani_sg.id\n"
                    ],
                    [
                        78,
                        "    type        = \"ingress\"\n"
                    ],
                    [
                        79,
                        "    from_port   = 80\n"
                    ],
                    [
                        80,
                        "    to_port     = 80\n"
                    ],
                    [
                        81,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        82,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        83,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    76,
                    83
                ],
                "resource": "aws_security_group_rule.mani_sg_rule_80",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf"
            },
            {
                "check_id": "CKV_AWS_46",
                "bc_check_id": "BC_AWS_SECRETS_1",
                "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "user_data"
                    ]
                },
                "code_block": [
                    [
                        88,
                        "resource \"aws_instance\" \"mani_ec2\" {\n"
                    ],
                    [
                        89,
                        "  ami           = \"ami-06b21ccaeff8cd686\"\n"
                    ],
                    [
                        90,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        91,
                        "  subnet_id     = aws_subnet.mani_subnet.id\n"
                    ],
                    [
                        92,
                        "  security_groups = [aws_security_group.mani_sg.id]\n"
                    ],
                    [
                        93,
                        "  associate_public_ip_address = true\n"
                    ],
                    [
                        94,
                        "  key_name = var.key_name\n"
                    ],
                    [
                        95,
                        "  user_data = <<-EOF\n"
                    ],
                    [
                        96,
                        "              #!/bin/bash\n"
                    ],
                    [
                        97,
                        "              sudo yum update -y\n"
                    ],
                    [
                        98,
                        "              sudo yum install httpd -y\n"
                    ],
                    [
                        99,
                        "              sudo systemctl start httpd\n"
                    ],
                    [
                        100,
                        "              sudo systemctl enable httpd\n"
                    ],
                    [
                        101,
                        "              echo \"<h1>Deployed via Terraform</h1>\" > /var/www/html/index.html\n"
                    ],
                    [
                        102,
                        "              EOF\n"
                    ],
                    [
                        103,
                        "  tags = {\n"
                    ],
                    [
                        104,
                        "    Name = \"mani_ec2\"\n"
                    ],
                    [
                        105,
                        "  }\n"
                    ],
                    [
                        106,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    88,
                    106
                ],
                "resource": "aws_instance.mani_ec2",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mani_ec2"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-1",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "breadcrumbs": {
                    "key_name": [
                        {
                            "type": "tfvar",
                            "name": "key_name",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/terraform.tfvars",
                            "module_connection": false
                        },
                        {
                            "type": "variable",
                            "name": "key_name",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/variable.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_41",
                "bc_check_id": "BC_AWS_SECRETS_5",
                "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "provider \"aws\" {\n"
                    ],
                    [
                        2,
                        "  region = \"us-east-1\"\n"
                    ],
                    [
                        3,
                        "  # comman tag\n"
                    ],
                    [
                        4,
                        "  default_tags {\n"
                    ],
                    [
                        5,
                        "   tags = {\n"
                    ],
                    [
                        6,
                        "     Environment = \"Test\"\n"
                    ],
                    [
                        7,
                        "     Owner       = \"mani\"\n"
                    ],
                    [
                        8,
                        "     createBy     = \"Terraform\"\n"
                    ],
                    [
                        9,
                        "   }\n"
                    ],
                    [
                        10,
                        " }\n"
                    ],
                    [
                        11,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    1,
                    11
                ],
                "resource": "aws.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.provider.aws.credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-5",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf"
            },
            {
                "check_id": "CKV_AWS_130",
                "bc_check_id": "BC_AWS_NETWORKING_53",
                "check_name": "Ensure VPC subnets do not assign public IP by default",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "map_public_ip_on_launch"
                    ]
                },
                "code_block": [
                    [
                        27,
                        "resource \"aws_subnet\" \"private_subnet\" {\n"
                    ],
                    [
                        28,
                        "  count = 2\n"
                    ],
                    [
                        29,
                        "  vpc_id                  = aws_vpc.main_vpc.id\n"
                    ],
                    [
                        30,
                        "  cidr_block              = \"10.0.${count.index + 2}.0/24\"\n"
                    ],
                    [
                        31,
                        "  availability_zone       = data.aws_availability_zones.available.names[count.index]\n"
                    ],
                    [
                        32,
                        "\n"
                    ],
                    [
                        33,
                        "  tags = {\n"
                    ],
                    [
                        34,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        35,
                        "    Name = \"private-subnet-${count.index}\"\n"
                    ],
                    [
                        36,
                        "  }\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    27,
                    37
                ],
                "resource": "aws_subnet.private_subnet[0]",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SubnetPublicIP",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "private-subnet-0",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-vpc-subnets-do-not-assign-public-ip-by-default",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_24",
                "bc_check_id": "BC_AWS_NETWORKING_1",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        65,
                        "resource \"aws_security_group\" \"alb_sg\" {\n"
                    ],
                    [
                        66,
                        "  vpc_id = aws_vpc.main_vpc.id\n"
                    ],
                    [
                        67,
                        "\n"
                    ],
                    [
                        68,
                        "  ingress {\n"
                    ],
                    [
                        69,
                        "    from_port   = 80\n"
                    ],
                    [
                        70,
                        "    to_port     = 80\n"
                    ],
                    [
                        71,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        72,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        73,
                        "  }\n"
                    ],
                    [
                        74,
                        "\n"
                    ],
                    [
                        75,
                        "  egress {\n"
                    ],
                    [
                        76,
                        "    from_port   = 0\n"
                    ],
                    [
                        77,
                        "    to_port     = 0\n"
                    ],
                    [
                        78,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        79,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        80,
                        "  }\n"
                    ],
                    [
                        81,
                        "\n"
                    ],
                    [
                        82,
                        "  tags = {\n"
                    ],
                    [
                        83,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        84,
                        "    Name = \"alb-sg\"\n"
                    ],
                    [
                        85,
                        "  }\n"
                    ],
                    [
                        86,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    65,
                    86
                ],
                "resource": "aws_security_group.alb_sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "alb-sg",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_277",
                "bc_check_id": "BC_AWS_NETWORKING_78",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        65,
                        "resource \"aws_security_group\" \"alb_sg\" {\n"
                    ],
                    [
                        66,
                        "  vpc_id = aws_vpc.main_vpc.id\n"
                    ],
                    [
                        67,
                        "\n"
                    ],
                    [
                        68,
                        "  ingress {\n"
                    ],
                    [
                        69,
                        "    from_port   = 80\n"
                    ],
                    [
                        70,
                        "    to_port     = 80\n"
                    ],
                    [
                        71,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        72,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        73,
                        "  }\n"
                    ],
                    [
                        74,
                        "\n"
                    ],
                    [
                        75,
                        "  egress {\n"
                    ],
                    [
                        76,
                        "    from_port   = 0\n"
                    ],
                    [
                        77,
                        "    to_port     = 0\n"
                    ],
                    [
                        78,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        79,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        80,
                        "  }\n"
                    ],
                    [
                        81,
                        "\n"
                    ],
                    [
                        82,
                        "  tags = {\n"
                    ],
                    [
                        83,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        84,
                        "    Name = \"alb-sg\"\n"
                    ],
                    [
                        85,
                        "  }\n"
                    ],
                    [
                        86,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    65,
                    86
                ],
                "resource": "aws_security_group.alb_sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngressAny",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "alb-sg",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_25",
                "bc_check_id": "BC_AWS_NETWORKING_2",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        65,
                        "resource \"aws_security_group\" \"alb_sg\" {\n"
                    ],
                    [
                        66,
                        "  vpc_id = aws_vpc.main_vpc.id\n"
                    ],
                    [
                        67,
                        "\n"
                    ],
                    [
                        68,
                        "  ingress {\n"
                    ],
                    [
                        69,
                        "    from_port   = 80\n"
                    ],
                    [
                        70,
                        "    to_port     = 80\n"
                    ],
                    [
                        71,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        72,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        73,
                        "  }\n"
                    ],
                    [
                        74,
                        "\n"
                    ],
                    [
                        75,
                        "  egress {\n"
                    ],
                    [
                        76,
                        "    from_port   = 0\n"
                    ],
                    [
                        77,
                        "    to_port     = 0\n"
                    ],
                    [
                        78,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        79,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        80,
                        "  }\n"
                    ],
                    [
                        81,
                        "\n"
                    ],
                    [
                        82,
                        "  tags = {\n"
                    ],
                    [
                        83,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        84,
                        "    Name = \"alb-sg\"\n"
                    ],
                    [
                        85,
                        "  }\n"
                    ],
                    [
                        86,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    65,
                    86
                ],
                "resource": "aws_security_group.alb_sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "alb-sg",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_260",
                "bc_check_id": "BC_AWS_NETWORKING_67",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        88,
                        "resource \"aws_security_group\" \"ec2_sg\" {\n"
                    ],
                    [
                        89,
                        "  vpc_id = aws_vpc.main_vpc.id\n"
                    ],
                    [
                        90,
                        "\n"
                    ],
                    [
                        91,
                        "  ingress {\n"
                    ],
                    [
                        92,
                        "    from_port   = 80\n"
                    ],
                    [
                        93,
                        "    to_port     = 80\n"
                    ],
                    [
                        94,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        95,
                        "    security_groups = [aws_security_group.alb_sg.id]\n"
                    ],
                    [
                        96,
                        "  }\n"
                    ],
                    [
                        97,
                        "\n"
                    ],
                    [
                        98,
                        "  egress {\n"
                    ],
                    [
                        99,
                        "    from_port   = 0\n"
                    ],
                    [
                        100,
                        "    to_port     = 0\n"
                    ],
                    [
                        101,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        102,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        103,
                        "  }\n"
                    ],
                    [
                        104,
                        "\n"
                    ],
                    [
                        105,
                        "  tags = {\n"
                    ],
                    [
                        106,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        107,
                        "    Name = \"ec2-sg\"\n"
                    ],
                    [
                        108,
                        "  }\n"
                    ],
                    [
                        109,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    88,
                    109
                ],
                "resource": "aws_security_group.ec2_sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress80",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "ec2-sg",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_24",
                "bc_check_id": "BC_AWS_NETWORKING_1",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        88,
                        "resource \"aws_security_group\" \"ec2_sg\" {\n"
                    ],
                    [
                        89,
                        "  vpc_id = aws_vpc.main_vpc.id\n"
                    ],
                    [
                        90,
                        "\n"
                    ],
                    [
                        91,
                        "  ingress {\n"
                    ],
                    [
                        92,
                        "    from_port   = 80\n"
                    ],
                    [
                        93,
                        "    to_port     = 80\n"
                    ],
                    [
                        94,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        95,
                        "    security_groups = [aws_security_group.alb_sg.id]\n"
                    ],
                    [
                        96,
                        "  }\n"
                    ],
                    [
                        97,
                        "\n"
                    ],
                    [
                        98,
                        "  egress {\n"
                    ],
                    [
                        99,
                        "    from_port   = 0\n"
                    ],
                    [
                        100,
                        "    to_port     = 0\n"
                    ],
                    [
                        101,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        102,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        103,
                        "  }\n"
                    ],
                    [
                        104,
                        "\n"
                    ],
                    [
                        105,
                        "  tags = {\n"
                    ],
                    [
                        106,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        107,
                        "    Name = \"ec2-sg\"\n"
                    ],
                    [
                        108,
                        "  }\n"
                    ],
                    [
                        109,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    88,
                    109
                ],
                "resource": "aws_security_group.ec2_sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "ec2-sg",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_277",
                "bc_check_id": "BC_AWS_NETWORKING_78",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        88,
                        "resource \"aws_security_group\" \"ec2_sg\" {\n"
                    ],
                    [
                        89,
                        "  vpc_id = aws_vpc.main_vpc.id\n"
                    ],
                    [
                        90,
                        "\n"
                    ],
                    [
                        91,
                        "  ingress {\n"
                    ],
                    [
                        92,
                        "    from_port   = 80\n"
                    ],
                    [
                        93,
                        "    to_port     = 80\n"
                    ],
                    [
                        94,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        95,
                        "    security_groups = [aws_security_group.alb_sg.id]\n"
                    ],
                    [
                        96,
                        "  }\n"
                    ],
                    [
                        97,
                        "\n"
                    ],
                    [
                        98,
                        "  egress {\n"
                    ],
                    [
                        99,
                        "    from_port   = 0\n"
                    ],
                    [
                        100,
                        "    to_port     = 0\n"
                    ],
                    [
                        101,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        102,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        103,
                        "  }\n"
                    ],
                    [
                        104,
                        "\n"
                    ],
                    [
                        105,
                        "  tags = {\n"
                    ],
                    [
                        106,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        107,
                        "    Name = \"ec2-sg\"\n"
                    ],
                    [
                        108,
                        "  }\n"
                    ],
                    [
                        109,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    88,
                    109
                ],
                "resource": "aws_security_group.ec2_sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngressAny",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "ec2-sg",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_25",
                "bc_check_id": "BC_AWS_NETWORKING_2",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        88,
                        "resource \"aws_security_group\" \"ec2_sg\" {\n"
                    ],
                    [
                        89,
                        "  vpc_id = aws_vpc.main_vpc.id\n"
                    ],
                    [
                        90,
                        "\n"
                    ],
                    [
                        91,
                        "  ingress {\n"
                    ],
                    [
                        92,
                        "    from_port   = 80\n"
                    ],
                    [
                        93,
                        "    to_port     = 80\n"
                    ],
                    [
                        94,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        95,
                        "    security_groups = [aws_security_group.alb_sg.id]\n"
                    ],
                    [
                        96,
                        "  }\n"
                    ],
                    [
                        97,
                        "\n"
                    ],
                    [
                        98,
                        "  egress {\n"
                    ],
                    [
                        99,
                        "    from_port   = 0\n"
                    ],
                    [
                        100,
                        "    to_port     = 0\n"
                    ],
                    [
                        101,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        102,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        103,
                        "  }\n"
                    ],
                    [
                        104,
                        "\n"
                    ],
                    [
                        105,
                        "  tags = {\n"
                    ],
                    [
                        106,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        107,
                        "    Name = \"ec2-sg\"\n"
                    ],
                    [
                        108,
                        "  }\n"
                    ],
                    [
                        109,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    88,
                    109
                ],
                "resource": "aws_security_group.ec2_sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "ec2-sg",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_260",
                "bc_check_id": "BC_AWS_NETWORKING_67",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        111,
                        "resource \"aws_security_group\" \"rds_sg\" {\n"
                    ],
                    [
                        112,
                        "  vpc_id = aws_vpc.main_vpc.id\n"
                    ],
                    [
                        113,
                        "\n"
                    ],
                    [
                        114,
                        "  ingress {\n"
                    ],
                    [
                        115,
                        "    from_port   = 3306\n"
                    ],
                    [
                        116,
                        "    to_port     = 3306\n"
                    ],
                    [
                        117,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        118,
                        "    cidr_blocks = [\"10.0.0.0/16\"]\n"
                    ],
                    [
                        119,
                        "  }\n"
                    ],
                    [
                        120,
                        "\n"
                    ],
                    [
                        121,
                        "  egress {\n"
                    ],
                    [
                        122,
                        "    from_port   = 0\n"
                    ],
                    [
                        123,
                        "    to_port     = 0\n"
                    ],
                    [
                        124,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        125,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        126,
                        "  }\n"
                    ],
                    [
                        127,
                        "\n"
                    ],
                    [
                        128,
                        "  tags = {\n"
                    ],
                    [
                        129,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        130,
                        "    Name = \"rds-sg\"\n"
                    ],
                    [
                        131,
                        "  }\n"
                    ],
                    [
                        132,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    111,
                    132
                ],
                "resource": "aws_security_group.rds_sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress80",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "rds-sg",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_24",
                "bc_check_id": "BC_AWS_NETWORKING_1",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        111,
                        "resource \"aws_security_group\" \"rds_sg\" {\n"
                    ],
                    [
                        112,
                        "  vpc_id = aws_vpc.main_vpc.id\n"
                    ],
                    [
                        113,
                        "\n"
                    ],
                    [
                        114,
                        "  ingress {\n"
                    ],
                    [
                        115,
                        "    from_port   = 3306\n"
                    ],
                    [
                        116,
                        "    to_port     = 3306\n"
                    ],
                    [
                        117,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        118,
                        "    cidr_blocks = [\"10.0.0.0/16\"]\n"
                    ],
                    [
                        119,
                        "  }\n"
                    ],
                    [
                        120,
                        "\n"
                    ],
                    [
                        121,
                        "  egress {\n"
                    ],
                    [
                        122,
                        "    from_port   = 0\n"
                    ],
                    [
                        123,
                        "    to_port     = 0\n"
                    ],
                    [
                        124,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        125,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        126,
                        "  }\n"
                    ],
                    [
                        127,
                        "\n"
                    ],
                    [
                        128,
                        "  tags = {\n"
                    ],
                    [
                        129,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        130,
                        "    Name = \"rds-sg\"\n"
                    ],
                    [
                        131,
                        "  }\n"
                    ],
                    [
                        132,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    111,
                    132
                ],
                "resource": "aws_security_group.rds_sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "rds-sg",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_277",
                "bc_check_id": "BC_AWS_NETWORKING_78",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        111,
                        "resource \"aws_security_group\" \"rds_sg\" {\n"
                    ],
                    [
                        112,
                        "  vpc_id = aws_vpc.main_vpc.id\n"
                    ],
                    [
                        113,
                        "\n"
                    ],
                    [
                        114,
                        "  ingress {\n"
                    ],
                    [
                        115,
                        "    from_port   = 3306\n"
                    ],
                    [
                        116,
                        "    to_port     = 3306\n"
                    ],
                    [
                        117,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        118,
                        "    cidr_blocks = [\"10.0.0.0/16\"]\n"
                    ],
                    [
                        119,
                        "  }\n"
                    ],
                    [
                        120,
                        "\n"
                    ],
                    [
                        121,
                        "  egress {\n"
                    ],
                    [
                        122,
                        "    from_port   = 0\n"
                    ],
                    [
                        123,
                        "    to_port     = 0\n"
                    ],
                    [
                        124,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        125,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        126,
                        "  }\n"
                    ],
                    [
                        127,
                        "\n"
                    ],
                    [
                        128,
                        "  tags = {\n"
                    ],
                    [
                        129,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        130,
                        "    Name = \"rds-sg\"\n"
                    ],
                    [
                        131,
                        "  }\n"
                    ],
                    [
                        132,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    111,
                    132
                ],
                "resource": "aws_security_group.rds_sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngressAny",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "rds-sg",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_25",
                "bc_check_id": "BC_AWS_NETWORKING_2",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        111,
                        "resource \"aws_security_group\" \"rds_sg\" {\n"
                    ],
                    [
                        112,
                        "  vpc_id = aws_vpc.main_vpc.id\n"
                    ],
                    [
                        113,
                        "\n"
                    ],
                    [
                        114,
                        "  ingress {\n"
                    ],
                    [
                        115,
                        "    from_port   = 3306\n"
                    ],
                    [
                        116,
                        "    to_port     = 3306\n"
                    ],
                    [
                        117,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        118,
                        "    cidr_blocks = [\"10.0.0.0/16\"]\n"
                    ],
                    [
                        119,
                        "  }\n"
                    ],
                    [
                        120,
                        "\n"
                    ],
                    [
                        121,
                        "  egress {\n"
                    ],
                    [
                        122,
                        "    from_port   = 0\n"
                    ],
                    [
                        123,
                        "    to_port     = 0\n"
                    ],
                    [
                        124,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        125,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        126,
                        "  }\n"
                    ],
                    [
                        127,
                        "\n"
                    ],
                    [
                        128,
                        "  tags = {\n"
                    ],
                    [
                        129,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        130,
                        "    Name = \"rds-sg\"\n"
                    ],
                    [
                        131,
                        "  }\n"
                    ],
                    [
                        132,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    111,
                    132
                ],
                "resource": "aws_security_group.rds_sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "rds-sg",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_88",
                "bc_check_id": "BC_AWS_PUBLIC_12",
                "check_name": "EC2 instance should not have public IP.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "network_interfaces/[0]/associate_public_ip_address"
                    ]
                },
                "code_block": [
                    [
                        134,
                        "resource \"aws_launch_template\" \"apache_lt\" {\n"
                    ],
                    [
                        135,
                        "  name_prefix   = \"apache-lt-\"\n"
                    ],
                    [
                        136,
                        "  \n"
                    ],
                    [
                        137,
                        "  image_id      = var.ami_id\n"
                    ],
                    [
                        138,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        139,
                        "\n"
                    ],
                    [
                        140,
                        "  user_data = base64encode(<<-EOF\n"
                    ],
                    [
                        141,
                        "              #!/bin/bash\n"
                    ],
                    [
                        142,
                        "              yum update -y\n"
                    ],
                    [
                        143,
                        "              yum install httpd -y\n"
                    ],
                    [
                        144,
                        "              systemctl start httpd\n"
                    ],
                    [
                        145,
                        "              systemctl enable httpd\n"
                    ],
                    [
                        146,
                        "              \n"
                    ],
                    [
                        147,
                        "EOF\n"
                    ],
                    [
                        148,
                        ")\n"
                    ],
                    [
                        149,
                        "\n"
                    ],
                    [
                        150,
                        "  network_interfaces {\n"
                    ],
                    [
                        151,
                        "    security_groups = [aws_security_group.ec2_sg.id]\n"
                    ],
                    [
                        152,
                        "  }\n"
                    ],
                    [
                        153,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    134,
                    153
                ],
                "resource": "aws_launch_template.apache_lt",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/public-policies/public-12",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "breadcrumbs": {
                    "image_id": [
                        {
                            "type": "variable",
                            "name": "ami_id",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/variables.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_46",
                "bc_check_id": "BC_AWS_SECRETS_1",
                "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "user_data"
                    ]
                },
                "code_block": [
                    [
                        134,
                        "resource \"aws_launch_template\" \"apache_lt\" {\n"
                    ],
                    [
                        135,
                        "  name_prefix   = \"apache-lt-\"\n"
                    ],
                    [
                        136,
                        "  \n"
                    ],
                    [
                        137,
                        "  image_id      = var.ami_id\n"
                    ],
                    [
                        138,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        139,
                        "\n"
                    ],
                    [
                        140,
                        "  user_data = base64encode(<<-EOF\n"
                    ],
                    [
                        141,
                        "              #!/bin/bash\n"
                    ],
                    [
                        142,
                        "              yum update -y\n"
                    ],
                    [
                        143,
                        "              yum install httpd -y\n"
                    ],
                    [
                        144,
                        "              systemctl start httpd\n"
                    ],
                    [
                        145,
                        "              systemctl enable httpd\n"
                    ],
                    [
                        146,
                        "              \n"
                    ],
                    [
                        147,
                        "EOF\n"
                    ],
                    [
                        148,
                        ")\n"
                    ],
                    [
                        149,
                        "\n"
                    ],
                    [
                        150,
                        "  network_interfaces {\n"
                    ],
                    [
                        151,
                        "    security_groups = [aws_security_group.ec2_sg.id]\n"
                    ],
                    [
                        152,
                        "  }\n"
                    ],
                    [
                        153,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    134,
                    153
                ],
                "resource": "aws_launch_template.apache_lt",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-1",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "breadcrumbs": {
                    "image_id": [
                        {
                            "type": "variable",
                            "name": "ami_id",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/variables.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_341",
                "bc_check_id": "BC_AWS_GENERAL_244",
                "check_name": "Ensure Launch template should not have a metadata response hop limit greater than 1",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "metadata_options/[0]/http_put_response_hop_limit"
                    ]
                },
                "code_block": [
                    [
                        134,
                        "resource \"aws_launch_template\" \"apache_lt\" {\n"
                    ],
                    [
                        135,
                        "  name_prefix   = \"apache-lt-\"\n"
                    ],
                    [
                        136,
                        "  \n"
                    ],
                    [
                        137,
                        "  image_id      = var.ami_id\n"
                    ],
                    [
                        138,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        139,
                        "\n"
                    ],
                    [
                        140,
                        "  user_data = base64encode(<<-EOF\n"
                    ],
                    [
                        141,
                        "              #!/bin/bash\n"
                    ],
                    [
                        142,
                        "              yum update -y\n"
                    ],
                    [
                        143,
                        "              yum install httpd -y\n"
                    ],
                    [
                        144,
                        "              systemctl start httpd\n"
                    ],
                    [
                        145,
                        "              systemctl enable httpd\n"
                    ],
                    [
                        146,
                        "              \n"
                    ],
                    [
                        147,
                        "EOF\n"
                    ],
                    [
                        148,
                        ")\n"
                    ],
                    [
                        149,
                        "\n"
                    ],
                    [
                        150,
                        "  network_interfaces {\n"
                    ],
                    [
                        151,
                        "    security_groups = [aws_security_group.ec2_sg.id]\n"
                    ],
                    [
                        152,
                        "  }\n"
                    ],
                    [
                        153,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    134,
                    153
                ],
                "resource": "aws_launch_template.apache_lt",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LaunchTemplateMetadataHop",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-341",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "breadcrumbs": {
                    "image_id": [
                        {
                            "type": "variable",
                            "name": "ami_id",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/variables.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_315",
                "bc_check_id": "BC_AWS_GENERAL_226",
                "check_name": "Ensure EC2 Auto Scaling groups use EC2 launch templates",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "launch_template"
                    ]
                },
                "code_block": [
                    [
                        159,
                        "resource \"aws_autoscaling_group\" \"apache_asg\" {\n"
                    ],
                    [
                        160,
                        "  vpc_zone_identifier         = aws_subnet.public_subnet.*.id\n"
                    ],
                    [
                        161,
                        "  max_size                    = 2\n"
                    ],
                    [
                        162,
                        "  min_size                    = 1\n"
                    ],
                    [
                        163,
                        "  desired_capacity            = 1\n"
                    ],
                    [
                        164,
                        "  launch_template {\n"
                    ],
                    [
                        165,
                        "    id      = aws_launch_template.apache_lt.id\n"
                    ],
                    [
                        166,
                        "    version = \"$Latest\"\n"
                    ],
                    [
                        167,
                        "  }\n"
                    ],
                    [
                        168,
                        "  target_group_arns = [aws_lb_target_group.apache_tg.arn]\n"
                    ],
                    [
                        169,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    159,
                    169
                ],
                "resource": "aws_autoscaling_group.apache_asg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.AutoScalingLaunchTemplate",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-315",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_328",
                "bc_check_id": "BC_AWS_NETWORKING_89",
                "check_name": "Ensure that ALB is configured with defensive or strictest desync mitigation mode",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "desync_mitigation_mode"
                    ]
                },
                "code_block": [
                    [
                        171,
                        "resource \"aws_lb\" \"apache_lb\" {\n"
                    ],
                    [
                        172,
                        "  name               = \"apache-alb\"\n"
                    ],
                    [
                        173,
                        "  internal           = false\n"
                    ],
                    [
                        174,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        175,
                        "  security_groups    = [aws_security_group.alb_sg.id]\n"
                    ],
                    [
                        176,
                        "  subnets            = aws_subnet.public_subnet.*.id\n"
                    ],
                    [
                        177,
                        "\n"
                    ],
                    [
                        178,
                        "  tags = {\n"
                    ],
                    [
                        179,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        180,
                        "    Name = \"apache-lb\"\n"
                    ],
                    [
                        181,
                        "  }\n"
                    ],
                    [
                        182,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    171,
                    182
                ],
                "resource": "aws_lb.apache_lb",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ALBDesyncMode",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "apache-lb",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-328",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_133",
                "bc_check_id": "BC_AWS_GENERAL_46",
                "check_name": "Ensure that RDS instances has backup policy",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "backup_retention_period"
                    ]
                },
                "code_block": [
                    [
                        205,
                        "resource \"aws_db_instance\" \"mysql\" {\n"
                    ],
                    [
                        206,
                        "  allocated_storage    = 20\n"
                    ],
                    [
                        207,
                        "  engine               = \"mysql\"\n"
                    ],
                    [
                        208,
                        "  engine_version = \"8.0\"\n"
                    ],
                    [
                        209,
                        "  instance_class = \"db.t3.micro\"\n"
                    ],
                    [
                        210,
                        "  username             = \"admin\"\n"
                    ],
                    [
                        211,
                        "  pa**********             = \"password\"\n"
                    ],
                    [
                        212,
                        "  vpc_security_group_ids = [aws_security_group.rds_sg.id]\n"
                    ],
                    [
                        213,
                        "  db_subnet_group_name = aws_db_subnet_group.main.name\n"
                    ],
                    [
                        214,
                        "  port                 = 3306\n"
                    ],
                    [
                        215,
                        "  skip_final_snapshot    = true\n"
                    ],
                    [
                        216,
                        "\n"
                    ],
                    [
                        217,
                        "  tags = {\n"
                    ],
                    [
                        218,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        219,
                        "    Name = \"mysql-db\"\n"
                    ],
                    [
                        220,
                        "  }\n"
                    ],
                    [
                        221,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    205,
                    221
                ],
                "resource": "aws_db_instance.mysql",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.DBInstanceBackupRetentionPeriod",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mysql-db",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-rds-instances-have-backup-policy",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "breadcrumbs": {
                    "db_subnet_group_name": [
                        {
                            "type": "resource",
                            "name": "aws_db_subnet_group.main",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_17",
                "bc_check_id": "BC_AWS_PUBLIC_2",
                "check_name": "Ensure all data stored in RDS is not publicly accessible",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "publicly_accessible"
                    ]
                },
                "code_block": [
                    [
                        205,
                        "resource \"aws_db_instance\" \"mysql\" {\n"
                    ],
                    [
                        206,
                        "  allocated_storage    = 20\n"
                    ],
                    [
                        207,
                        "  engine               = \"mysql\"\n"
                    ],
                    [
                        208,
                        "  engine_version = \"8.0\"\n"
                    ],
                    [
                        209,
                        "  instance_class = \"db.t3.micro\"\n"
                    ],
                    [
                        210,
                        "  username             = \"admin\"\n"
                    ],
                    [
                        211,
                        "  pa**********             = \"password\"\n"
                    ],
                    [
                        212,
                        "  vpc_security_group_ids = [aws_security_group.rds_sg.id]\n"
                    ],
                    [
                        213,
                        "  db_subnet_group_name = aws_db_subnet_group.main.name\n"
                    ],
                    [
                        214,
                        "  port                 = 3306\n"
                    ],
                    [
                        215,
                        "  skip_final_snapshot    = true\n"
                    ],
                    [
                        216,
                        "\n"
                    ],
                    [
                        217,
                        "  tags = {\n"
                    ],
                    [
                        218,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        219,
                        "    Name = \"mysql-db\"\n"
                    ],
                    [
                        220,
                        "  }\n"
                    ],
                    [
                        221,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    205,
                    221
                ],
                "resource": "aws_db_instance.mysql",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.RDSPubliclyAccessible",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mysql-db",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/public-policies/public-2",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "breadcrumbs": {
                    "db_subnet_group_name": [
                        {
                            "type": "resource",
                            "name": "aws_db_subnet_group.main",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_211",
                "bc_check_id": "BC_AWS_GENERAL_118",
                "check_name": "Ensure RDS uses a modern CaCert",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "ca_cert_identifier"
                    ]
                },
                "code_block": [
                    [
                        205,
                        "resource \"aws_db_instance\" \"mysql\" {\n"
                    ],
                    [
                        206,
                        "  allocated_storage    = 20\n"
                    ],
                    [
                        207,
                        "  engine               = \"mysql\"\n"
                    ],
                    [
                        208,
                        "  engine_version = \"8.0\"\n"
                    ],
                    [
                        209,
                        "  instance_class = \"db.t3.micro\"\n"
                    ],
                    [
                        210,
                        "  username             = \"admin\"\n"
                    ],
                    [
                        211,
                        "  pa**********             = \"password\"\n"
                    ],
                    [
                        212,
                        "  vpc_security_group_ids = [aws_security_group.rds_sg.id]\n"
                    ],
                    [
                        213,
                        "  db_subnet_group_name = aws_db_subnet_group.main.name\n"
                    ],
                    [
                        214,
                        "  port                 = 3306\n"
                    ],
                    [
                        215,
                        "  skip_final_snapshot    = true\n"
                    ],
                    [
                        216,
                        "\n"
                    ],
                    [
                        217,
                        "  tags = {\n"
                    ],
                    [
                        218,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        219,
                        "    Name = \"mysql-db\"\n"
                    ],
                    [
                        220,
                        "  }\n"
                    ],
                    [
                        221,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    205,
                    221
                ],
                "resource": "aws_db_instance.mysql",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.RDSCACertIsRecent",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mysql-db",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-rds-uses-a-modern-cacert",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "breadcrumbs": {
                    "db_subnet_group_name": [
                        {
                            "type": "resource",
                            "name": "aws_db_subnet_group.main",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_130",
                "bc_check_id": "BC_AWS_NETWORKING_53",
                "check_name": "Ensure VPC subnets do not assign public IP by default",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "map_public_ip_on_launch"
                    ]
                },
                "code_block": [
                    [
                        27,
                        "resource \"aws_subnet\" \"private_subnet\" {\n"
                    ],
                    [
                        28,
                        "  count = 2\n"
                    ],
                    [
                        29,
                        "  vpc_id                  = aws_vpc.main_vpc.id\n"
                    ],
                    [
                        30,
                        "  cidr_block              = \"10.0.${count.index + 2}.0/24\"\n"
                    ],
                    [
                        31,
                        "  availability_zone       = data.aws_availability_zones.available.names[count.index]\n"
                    ],
                    [
                        32,
                        "\n"
                    ],
                    [
                        33,
                        "  tags = {\n"
                    ],
                    [
                        34,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        35,
                        "    Name = \"private-subnet-${count.index}\"\n"
                    ],
                    [
                        36,
                        "  }\n"
                    ],
                    [
                        37,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    27,
                    37
                ],
                "resource": "aws_subnet.private_subnet[1]",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SubnetPublicIP",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "private-subnet-1",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-vpc-subnets-do-not-assign-public-ip-by-default",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_41",
                "bc_check_id": "BC_AWS_SECRETS_5",
                "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "provider \"aws\" {\n"
                    ],
                    [
                        2,
                        "  region = \"us-east-1\"\n"
                    ],
                    [
                        3,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    1,
                    3
                ],
                "resource": "aws.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.provider.aws.credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-5",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_93",
                "bc_check_id": "BC_AWS_S3_24",
                "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "policy"
                    ]
                },
                "code_block": [
                    [
                        19,
                        "resource \"aws_s3_bucket\" \"mani_tf-backend_test\" {\n"
                    ],
                    [
                        20,
                        "    bucket = \"mani-tf-backend-test\"\n"
                    ],
                    [
                        21,
                        "    tags = {\n"
                    ],
                    [
                        22,
                        "        Name = \"mani-tf-backend-test1\"\n"
                    ],
                    [
                        23,
                        "    }\n"
                    ],
                    [
                        24,
                        "}"
                    ]
                ],
                "file_path": "/Day3/Task4/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day3/Task4/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day3/Task4/main.tf",
                "file_line_range": [
                    19,
                    24
                ],
                "resource": "aws_s3_bucket.mani_tf-backend_test",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mani-tf-backend-test1"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-24",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day3/Task4/main.tf"
            },
            {
                "check_id": "CKV_AWS_41",
                "bc_check_id": "BC_AWS_SECRETS_5",
                "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        11,
                        "provider \"aws\" {\n"
                    ],
                    [
                        12,
                        "    region = \"us-east-1\"\n"
                    ],
                    [
                        13,
                        "    assume_role {\n"
                    ],
                    [
                        14,
                        "        role_arn = \"arn:aws:iam:::role/mani_tf-cli\"\n"
                    ],
                    [
                        15,
                        "        session_name = \"mani\"\n"
                    ],
                    [
                        16,
                        "    }\n"
                    ],
                    [
                        17,
                        "}\n"
                    ]
                ],
                "file_path": "/Day3/Task4/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day3/Task4/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day3/Task4/main.tf",
                "file_line_range": [
                    11,
                    17
                ],
                "resource": "aws.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.provider.aws.credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-5",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day3/Task4/main.tf"
            },
            {
                "check_id": "CKV_AWS_93",
                "bc_check_id": "BC_AWS_S3_24",
                "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "policy"
                    ]
                },
                "code_block": [
                    [
                        25,
                        "resource \"aws_s3_bucket\" \"mani_tf-backend\" {\n"
                    ],
                    [
                        26,
                        "    bucket = \"mani-tf-backend\"\n"
                    ],
                    [
                        27,
                        "    tags = merge(local.common_tags, {\n"
                    ],
                    [
                        28,
                        "        Name = \"mani-tf-backend\"\n"
                    ],
                    [
                        29,
                        "    })\n"
                    ],
                    [
                        30,
                        "}\n"
                    ]
                ],
                "file_path": "/Day3/Task4_Pre/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day3/Task4_Pre/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day3/Task4_Pre/main.tf",
                "file_line_range": [
                    25,
                    30
                ],
                "resource": "aws_s3_bucket.mani_tf-backend",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                "fixed_definition": null,
                "entity_tags": {
                    "created_by": "terraform",
                    "owner": "mani",
                    "Name": "mani-tf-backend"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-24",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day3/Task4_Pre/main.tf",
                "breadcrumbs": {
                    "tags": [
                        {
                            "type": "locals",
                            "name": "common_tags",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day3/Task4_Pre/main.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_93",
                "bc_check_id": "BC_AWS_S3_24",
                "check_name": "Ensure S3 bucket policy does not lockout all but root user. (Prevent lockouts needing root account fixes)",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "policy"
                    ]
                },
                "code_block": [
                    [
                        40,
                        "resource \"aws_s3_bucket_policy\" \"mani_tf-backend_policy\" {\n"
                    ],
                    [
                        41,
                        "    bucket = aws_s3_bucket.mani_tf-backend.id\n"
                    ],
                    [
                        42,
                        "    policy = jsonencode({\n"
                    ],
                    [
                        43,
                        "        Version = \"2012-10-17\",\n"
                    ],
                    [
                        44,
                        "        Statement = [\n"
                    ],
                    [
                        45,
                        "            {\n"
                    ],
                    [
                        46,
                        "                \"Effect\": \"Allow\",\n"
                    ],
                    [
                        47,
                        "                \"Principal\": \"*\",  # Allows access from any principal\n"
                    ],
                    [
                        48,
                        "                \"Action\": \"s3:ListBucket\",\n"
                    ],
                    [
                        49,
                        "                \"Resource\": aws_s3_bucket.mani_tf-backend.arn,\n"
                    ],
                    [
                        50,
                        "            },\n"
                    ],
                    [
                        51,
                        "            {\n"
                    ],
                    [
                        52,
                        "                \"Effect\": \"Allow\",\n"
                    ],
                    [
                        53,
                        "                \"Principal\": \"*\",  # Allows access from any principal\n"
                    ],
                    [
                        54,
                        "                \"Action\": [\"s3:GetObject\", \"s3:PutObject\"],\n"
                    ],
                    [
                        55,
                        "                \"Resource\": \"${aws_s3_bucket.mani_tf-backend.arn}/*\",\n"
                    ],
                    [
                        56,
                        "            }\n"
                    ],
                    [
                        57,
                        "        ]\n"
                    ],
                    [
                        58,
                        "    })\n"
                    ],
                    [
                        59,
                        "}\n"
                    ]
                ],
                "file_path": "/Day3/Task4_Pre/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day3/Task4_Pre/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day3/Task4_Pre/main.tf",
                "file_line_range": [
                    40,
                    59
                ],
                "resource": "aws_s3_bucket_policy.mani_tf-backend_policy",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.S3ProtectAgainstPolicyLockout",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/s3-policies/bc-aws-s3-24",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day3/Task4_Pre/main.tf"
            },
            {
                "check_id": "CKV_AWS_41",
                "bc_check_id": "BC_AWS_SECRETS_5",
                "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        10,
                        "provider \"aws\" {\n"
                    ],
                    [
                        11,
                        "    region = \"us-east-1\"\n"
                    ],
                    [
                        12,
                        "    assume_role {\n"
                    ],
                    [
                        13,
                        "        role_arn = \"arn:aws:iam::853973692277:role/mani_tf-cli\"\n"
                    ],
                    [
                        14,
                        "        session_name = \"mani\"\n"
                    ],
                    [
                        15,
                        "    }\n"
                    ],
                    [
                        16,
                        "}\n"
                    ]
                ],
                "file_path": "/Day3/Task4_Pre/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day3/Task4_Pre/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day3/Task4_Pre/main.tf",
                "file_line_range": [
                    10,
                    16
                ],
                "resource": "aws.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.provider.aws.credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-5",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day3/Task4_Pre/main.tf"
            },
            {
                "check_id": "CKV_AZURE_43",
                "bc_check_id": "BC_AZR_STORAGE_3",
                "check_name": "Ensure Storage Accounts adhere to the naming rules",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "name"
                    ]
                },
                "code_block": [
                    [
                        18,
                        "resource \"azurerm_storage_account\" \"mani-storage\" {\n"
                    ],
                    [
                        19,
                        "  name                     = \"manistorageaccount\"\n"
                    ],
                    [
                        20,
                        "  resource_group_name      = azurerm_resource_group.mani-rg.name\n"
                    ],
                    [
                        21,
                        "  location                 = azurerm_resource_group.mani-rg.location\n"
                    ],
                    [
                        22,
                        "  account_tier             = \"Standard\"\n"
                    ],
                    [
                        23,
                        "  account_replication_type = \"LRS\"\n"
                    ],
                    [
                        24,
                        "\n"
                    ],
                    [
                        25,
                        "  tags = {\n"
                    ],
                    [
                        26,
                        "    environment = \"test\"\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_azure/mani.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "file_line_range": [
                    18,
                    28
                ],
                "resource": "azurerm_storage_account.mani-storage",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.azure.StorageAccountName",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-general-policies/ensure-cognitive-services-account-encryption-cmks-are-enabled",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "breadcrumbs": {
                    "location": [
                        {
                            "type": "resource",
                            "name": "azurerm_resource_group.mani-rg",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                            "module_connection": false
                        }
                    ],
                    "resource_group_name": [
                        {
                            "type": "resource",
                            "name": "azurerm_resource_group.mani-rg",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AZURE_36",
                "bc_check_id": "BC_AZR_NETWORKING_16",
                "check_name": "Ensure 'Trusted Microsoft Services' is enabled for Storage Account access",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        18,
                        "resource \"azurerm_storage_account\" \"mani-storage\" {\n"
                    ],
                    [
                        19,
                        "  name                     = \"manistorageaccount\"\n"
                    ],
                    [
                        20,
                        "  resource_group_name      = azurerm_resource_group.mani-rg.name\n"
                    ],
                    [
                        21,
                        "  location                 = azurerm_resource_group.mani-rg.location\n"
                    ],
                    [
                        22,
                        "  account_tier             = \"Standard\"\n"
                    ],
                    [
                        23,
                        "  account_replication_type = \"LRS\"\n"
                    ],
                    [
                        24,
                        "\n"
                    ],
                    [
                        25,
                        "  tags = {\n"
                    ],
                    [
                        26,
                        "    environment = \"test\"\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_azure/mani.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "file_line_range": [
                    18,
                    28
                ],
                "resource": "azurerm_storage_account.mani-storage",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.azure.StorageAccountAzureServicesAccessEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-networking-policies/enable-trusted-microsoft-services-for-storage-account-access",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "breadcrumbs": {
                    "location": [
                        {
                            "type": "resource",
                            "name": "azurerm_resource_group.mani-rg",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                            "module_connection": false
                        }
                    ],
                    "resource_group_name": [
                        {
                            "type": "resource",
                            "name": "azurerm_resource_group.mani-rg",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AZURE_3",
                "bc_check_id": "BC_AZR_GENERAL_117",
                "check_name": "Ensure that 'enable_https_traffic_only' is enabled",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "enable_https_traffic_only"
                    ]
                },
                "code_block": [
                    [
                        18,
                        "resource \"azurerm_storage_account\" \"mani-storage\" {\n"
                    ],
                    [
                        19,
                        "  name                     = \"manistorageaccount\"\n"
                    ],
                    [
                        20,
                        "  resource_group_name      = azurerm_resource_group.mani-rg.name\n"
                    ],
                    [
                        21,
                        "  location                 = azurerm_resource_group.mani-rg.location\n"
                    ],
                    [
                        22,
                        "  account_tier             = \"Standard\"\n"
                    ],
                    [
                        23,
                        "  account_replication_type = \"LRS\"\n"
                    ],
                    [
                        24,
                        "\n"
                    ],
                    [
                        25,
                        "  tags = {\n"
                    ],
                    [
                        26,
                        "    environment = \"test\"\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_azure/mani.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "file_line_range": [
                    18,
                    28
                ],
                "resource": "azurerm_storage_account.mani-storage",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.azure.StorageAccountsTransportEncryption",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-general-policies/azr-general-3",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "breadcrumbs": {
                    "location": [
                        {
                            "type": "resource",
                            "name": "azurerm_resource_group.mani-rg",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                            "module_connection": false
                        }
                    ],
                    "resource_group_name": [
                        {
                            "type": "resource",
                            "name": "azurerm_resource_group.mani-rg",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AZURE_34",
                "bc_check_id": "BC_AZR_NETWORKING_14",
                "check_name": "Ensure that 'Public access level' is set to Private for blob containers",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "container_access_type/[0]"
                    ]
                },
                "code_block": [
                    [
                        31,
                        "resource \"azurerm_storage_container\" \"mani-container\" {\n"
                    ],
                    [
                        32,
                        "  name                  = \"manicontainer\"\n"
                    ],
                    [
                        33,
                        "  storage_account_name  = azurerm_storage_account.mani-storage.name\n"
                    ],
                    [
                        34,
                        "  container_access_type = \"private\"\n"
                    ],
                    [
                        35,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_azure/mani.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "file_line_range": [
                    31,
                    35
                ],
                "resource": "azurerm_storage_container.mani-container",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.azure.StorageBlobServiceContainerPrivateAccess",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-networking-policies/set-public-access-level-to-private-for-blob-containers",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "breadcrumbs": {
                    "storage_account_name": [
                        {
                            "type": "resource",
                            "name": "azurerm_storage_account.mani-storage",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_41",
                "bc_check_id": "BC_AWS_SECRETS_5",
                "check_name": "Ensure no hard coded AWS access key and secret key exists in provider",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        1,
                        "provider \"aws\" {\n"
                    ],
                    [
                        2,
                        "  region = var.aws_region\n"
                    ],
                    [
                        3,
                        "  default_tags {\n"
                    ],
                    [
                        4,
                        "    tags = {\n"
                    ],
                    [
                        5,
                        "      Environment = var.environment\n"
                    ],
                    [
                        6,
                        "      Owner       = var.owner\n"
                    ],
                    [
                        7,
                        "      CreateBy    = \"Terraform\"\n"
                    ],
                    [
                        8,
                        "    }\n"
                    ],
                    [
                        9,
                        "  }\n"
                    ],
                    [
                        10,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/mani.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/mani.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/mani.tf",
                "file_line_range": [
                    1,
                    10
                ],
                "resource": "aws.default",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.provider.aws.credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-5",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/mani.tf",
                "breadcrumbs": {
                    "default_tags.tags.Owner": [
                        {
                            "type": "tfvar",
                            "name": "owner",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/terrafrom.auto.tfvars",
                            "module_connection": false
                        },
                        {
                            "type": "variable",
                            "name": "owner",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/variables.tf",
                            "module_connection": false
                        }
                    ],
                    "default_tags.tags": [
                        {
                            "type": "tfvar",
                            "name": "environment",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/terrafrom.auto.tfvars",
                            "module_connection": false
                        },
                        {
                            "type": "variable",
                            "name": "environment",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/variables.tf",
                            "module_connection": false
                        }
                    ],
                    "default_tags.tags.Environment": [
                        {
                            "type": "tfvar",
                            "name": "environment",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/terrafrom.auto.tfvars",
                            "module_connection": false
                        },
                        {
                            "type": "variable",
                            "name": "environment",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/variables.tf",
                            "module_connection": false
                        }
                    ],
                    "region": [
                        {
                            "type": "tfvar",
                            "name": "aws_region",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/terrafrom.auto.tfvars",
                            "module_connection": false
                        },
                        {
                            "type": "variable",
                            "name": "aws_region",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/variables.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_315",
                "bc_check_id": "BC_AWS_GENERAL_226",
                "check_name": "Ensure EC2 Auto Scaling groups use EC2 launch templates",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "launch_template"
                    ]
                },
                "code_block": [
                    [
                        3,
                        "resource \"aws_autoscaling_group\" \"main\" {\n"
                    ],
                    [
                        4,
                        "  desired_capacity    = var.desired_capacity\n"
                    ],
                    [
                        5,
                        "  max_size            = var.max_size\n"
                    ],
                    [
                        6,
                        "  min_size            = var.min_size\n"
                    ],
                    [
                        7,
                        "  vpc_zone_identifier = var.private_subnets\n"
                    ],
                    [
                        8,
                        "  target_group_arns   = [var.target_group_arn]\n"
                    ],
                    [
                        9,
                        "\n"
                    ],
                    [
                        10,
                        "  launch_template {\n"
                    ],
                    [
                        11,
                        "    id      = var.launch_template_id\n"
                    ],
                    [
                        12,
                        "    version = \"$Latest\"\n"
                    ],
                    [
                        13,
                        "  }\n"
                    ],
                    [
                        14,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/modules/auto_scaling_group/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/auto_scaling_group/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/auto_scaling_group/main.tf",
                "file_line_range": [
                    3,
                    14
                ],
                "resource": "aws_autoscaling_group.main",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.AutoScalingLaunchTemplate",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-315",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/auto_scaling_group/main.tf",
                "breadcrumbs": {
                    "vpc_zone_identifier": [
                        {
                            "type": "variable",
                            "name": "private_subnets",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/auto_scaling_group/variables.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_88",
                "bc_check_id": "BC_AWS_PUBLIC_12",
                "check_name": "EC2 instance should not have public IP.",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "network_interfaces/[0]/associate_public_ip_address"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_launch_template\" \"main\" {\n"
                    ],
                    [
                        2,
                        "  name          = var.template_name\n"
                    ],
                    [
                        3,
                        "  image_id      = var.ami_id\n"
                    ],
                    [
                        4,
                        "  instance_type = var.instance_type\n"
                    ],
                    [
                        5,
                        "  key_name      = var.key_name\n"
                    ],
                    [
                        6,
                        "  user_data     = base64encode(var.user_data)\n"
                    ],
                    [
                        7,
                        "  \n"
                    ],
                    [
                        8,
                        "  update_default_version = true \n"
                    ],
                    [
                        9,
                        "  network_interfaces {\n"
                    ],
                    [
                        10,
                        "    associate_public_ip_address = false\n"
                    ],
                    [
                        11,
                        "    subnet_id                   = var.subnet_id\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "}"
                    ]
                ],
                "file_path": "/Try_modules/modules/ec2_template/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/ec2_template/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/ec2_template/main.tf",
                "file_line_range": [
                    1,
                    13
                ],
                "resource": "aws_launch_template.main",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/public-policies/public-12",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/ec2_template/main.tf"
            },
            {
                "check_id": "CKV_AWS_46",
                "bc_check_id": "BC_AWS_SECRETS_1",
                "check_name": "Ensure no hard-coded secrets exist in EC2 user data",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "user_data"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_launch_template\" \"main\" {\n"
                    ],
                    [
                        2,
                        "  name          = var.template_name\n"
                    ],
                    [
                        3,
                        "  image_id      = var.ami_id\n"
                    ],
                    [
                        4,
                        "  instance_type = var.instance_type\n"
                    ],
                    [
                        5,
                        "  key_name      = var.key_name\n"
                    ],
                    [
                        6,
                        "  user_data     = base64encode(var.user_data)\n"
                    ],
                    [
                        7,
                        "  \n"
                    ],
                    [
                        8,
                        "  update_default_version = true \n"
                    ],
                    [
                        9,
                        "  network_interfaces {\n"
                    ],
                    [
                        10,
                        "    associate_public_ip_address = false\n"
                    ],
                    [
                        11,
                        "    subnet_id                   = var.subnet_id\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "}"
                    ]
                ],
                "file_path": "/Try_modules/modules/ec2_template/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/ec2_template/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/ec2_template/main.tf",
                "file_line_range": [
                    1,
                    13
                ],
                "resource": "aws_launch_template.main",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2Credentials",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/secrets-policies/bc-aws-secrets-1",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/ec2_template/main.tf"
            },
            {
                "check_id": "CKV_AWS_341",
                "bc_check_id": "BC_AWS_GENERAL_244",
                "check_name": "Ensure Launch template should not have a metadata response hop limit greater than 1",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "metadata_options/[0]/http_put_response_hop_limit"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_launch_template\" \"main\" {\n"
                    ],
                    [
                        2,
                        "  name          = var.template_name\n"
                    ],
                    [
                        3,
                        "  image_id      = var.ami_id\n"
                    ],
                    [
                        4,
                        "  instance_type = var.instance_type\n"
                    ],
                    [
                        5,
                        "  key_name      = var.key_name\n"
                    ],
                    [
                        6,
                        "  user_data     = base64encode(var.user_data)\n"
                    ],
                    [
                        7,
                        "  \n"
                    ],
                    [
                        8,
                        "  update_default_version = true \n"
                    ],
                    [
                        9,
                        "  network_interfaces {\n"
                    ],
                    [
                        10,
                        "    associate_public_ip_address = false\n"
                    ],
                    [
                        11,
                        "    subnet_id                   = var.subnet_id\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "}"
                    ]
                ],
                "file_path": "/Try_modules/modules/ec2_template/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/ec2_template/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/ec2_template/main.tf",
                "file_line_range": [
                    1,
                    13
                ],
                "resource": "aws_launch_template.main",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LaunchTemplateMetadataHop",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-341",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/ec2_template/main.tf"
            },
            {
                "check_id": "CKV_AWS_328",
                "bc_check_id": "BC_AWS_NETWORKING_89",
                "check_name": "Ensure that ALB is configured with defensive or strictest desync mitigation mode",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": [
                        "desync_mitigation_mode"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_lb\" \"main\" {\n"
                    ],
                    [
                        2,
                        "  name               = var.lb_name\n"
                    ],
                    [
                        3,
                        "  internal           = false\n"
                    ],
                    [
                        4,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        5,
                        "  security_groups    = var.security_groups\n"
                    ],
                    [
                        6,
                        "  subnets            = var.public_subnets\n"
                    ],
                    [
                        7,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/modules/load_balancer/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/main.tf",
                "file_line_range": [
                    1,
                    7
                ],
                "resource": "aws_lb.main",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ALBDesyncMode",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/bc-aws-328",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/main.tf",
                "breadcrumbs": {
                    "security_groups": [
                        {
                            "type": "variable",
                            "name": "security_groups",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/variables.tf",
                            "module_connection": false
                        }
                    ],
                    "subnets": [
                        {
                            "type": "variable",
                            "name": "public_subnets",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/variables.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_260",
                "bc_check_id": "BC_AWS_NETWORKING_67",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        96,
                        "resource \"aws_security_group\" \"ec2-sg\" {\n"
                    ],
                    [
                        97,
                        "  vpc_id = aws_vpc.main.id\n"
                    ],
                    [
                        98,
                        "  name   = \"${var.Project}-ec2-sg\"\n"
                    ],
                    [
                        99,
                        "  description = \"Allow 80 and 22\"\n"
                    ],
                    [
                        100,
                        "  ingress {\n"
                    ],
                    [
                        101,
                        "    from_port   = 80\n"
                    ],
                    [
                        102,
                        "    to_port     = 80\n"
                    ],
                    [
                        103,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        104,
                        "    cidr_blocks = [aws_security_group.lb-sg.id]\n"
                    ],
                    [
                        105,
                        "  }\n"
                    ],
                    [
                        106,
                        "  ingress {\n"
                    ],
                    [
                        107,
                        "    from_port   = 22\n"
                    ],
                    [
                        108,
                        "    to_port     = 22\n"
                    ],
                    [
                        109,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        110,
                        "    cidr_blocks = [aws_security_group.bastion-sg.id]\n"
                    ],
                    [
                        111,
                        "  }\n"
                    ],
                    [
                        112,
                        "  egress {\n"
                    ],
                    [
                        113,
                        "    from_port   = 0\n"
                    ],
                    [
                        114,
                        "    to_port     = 0\n"
                    ],
                    [
                        115,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        116,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        117,
                        "  }\n"
                    ],
                    [
                        118,
                        "  depends_on = [aws_security_group.lb-sg, aws_security_group.bastion-sg]\n"
                    ],
                    [
                        119,
                        "  tags = {\n"
                    ],
                    [
                        120,
                        "    Name = \"${var.Project}-ec2-sg\"\n"
                    ],
                    [
                        121,
                        "  }\n"
                    ],
                    [
                        122,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/modules/network/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "file_line_range": [
                    96,
                    122
                ],
                "resource": "aws_security_group.ec2-sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress80",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${var.Project}-ec2-sg"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf"
            },
            {
                "check_id": "CKV_AWS_24",
                "bc_check_id": "BC_AWS_NETWORKING_1",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        96,
                        "resource \"aws_security_group\" \"ec2-sg\" {\n"
                    ],
                    [
                        97,
                        "  vpc_id = aws_vpc.main.id\n"
                    ],
                    [
                        98,
                        "  name   = \"${var.Project}-ec2-sg\"\n"
                    ],
                    [
                        99,
                        "  description = \"Allow 80 and 22\"\n"
                    ],
                    [
                        100,
                        "  ingress {\n"
                    ],
                    [
                        101,
                        "    from_port   = 80\n"
                    ],
                    [
                        102,
                        "    to_port     = 80\n"
                    ],
                    [
                        103,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        104,
                        "    cidr_blocks = [aws_security_group.lb-sg.id]\n"
                    ],
                    [
                        105,
                        "  }\n"
                    ],
                    [
                        106,
                        "  ingress {\n"
                    ],
                    [
                        107,
                        "    from_port   = 22\n"
                    ],
                    [
                        108,
                        "    to_port     = 22\n"
                    ],
                    [
                        109,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        110,
                        "    cidr_blocks = [aws_security_group.bastion-sg.id]\n"
                    ],
                    [
                        111,
                        "  }\n"
                    ],
                    [
                        112,
                        "  egress {\n"
                    ],
                    [
                        113,
                        "    from_port   = 0\n"
                    ],
                    [
                        114,
                        "    to_port     = 0\n"
                    ],
                    [
                        115,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        116,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        117,
                        "  }\n"
                    ],
                    [
                        118,
                        "  depends_on = [aws_security_group.lb-sg, aws_security_group.bastion-sg]\n"
                    ],
                    [
                        119,
                        "  tags = {\n"
                    ],
                    [
                        120,
                        "    Name = \"${var.Project}-ec2-sg\"\n"
                    ],
                    [
                        121,
                        "  }\n"
                    ],
                    [
                        122,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/modules/network/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "file_line_range": [
                    96,
                    122
                ],
                "resource": "aws_security_group.ec2-sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${var.Project}-ec2-sg"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf"
            },
            {
                "check_id": "CKV_AWS_277",
                "bc_check_id": "BC_AWS_NETWORKING_78",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        96,
                        "resource \"aws_security_group\" \"ec2-sg\" {\n"
                    ],
                    [
                        97,
                        "  vpc_id = aws_vpc.main.id\n"
                    ],
                    [
                        98,
                        "  name   = \"${var.Project}-ec2-sg\"\n"
                    ],
                    [
                        99,
                        "  description = \"Allow 80 and 22\"\n"
                    ],
                    [
                        100,
                        "  ingress {\n"
                    ],
                    [
                        101,
                        "    from_port   = 80\n"
                    ],
                    [
                        102,
                        "    to_port     = 80\n"
                    ],
                    [
                        103,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        104,
                        "    cidr_blocks = [aws_security_group.lb-sg.id]\n"
                    ],
                    [
                        105,
                        "  }\n"
                    ],
                    [
                        106,
                        "  ingress {\n"
                    ],
                    [
                        107,
                        "    from_port   = 22\n"
                    ],
                    [
                        108,
                        "    to_port     = 22\n"
                    ],
                    [
                        109,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        110,
                        "    cidr_blocks = [aws_security_group.bastion-sg.id]\n"
                    ],
                    [
                        111,
                        "  }\n"
                    ],
                    [
                        112,
                        "  egress {\n"
                    ],
                    [
                        113,
                        "    from_port   = 0\n"
                    ],
                    [
                        114,
                        "    to_port     = 0\n"
                    ],
                    [
                        115,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        116,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        117,
                        "  }\n"
                    ],
                    [
                        118,
                        "  depends_on = [aws_security_group.lb-sg, aws_security_group.bastion-sg]\n"
                    ],
                    [
                        119,
                        "  tags = {\n"
                    ],
                    [
                        120,
                        "    Name = \"${var.Project}-ec2-sg\"\n"
                    ],
                    [
                        121,
                        "  }\n"
                    ],
                    [
                        122,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/modules/network/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "file_line_range": [
                    96,
                    122
                ],
                "resource": "aws_security_group.ec2-sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngressAny",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${var.Project}-ec2-sg"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf"
            },
            {
                "check_id": "CKV_AWS_25",
                "bc_check_id": "BC_AWS_NETWORKING_2",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        96,
                        "resource \"aws_security_group\" \"ec2-sg\" {\n"
                    ],
                    [
                        97,
                        "  vpc_id = aws_vpc.main.id\n"
                    ],
                    [
                        98,
                        "  name   = \"${var.Project}-ec2-sg\"\n"
                    ],
                    [
                        99,
                        "  description = \"Allow 80 and 22\"\n"
                    ],
                    [
                        100,
                        "  ingress {\n"
                    ],
                    [
                        101,
                        "    from_port   = 80\n"
                    ],
                    [
                        102,
                        "    to_port     = 80\n"
                    ],
                    [
                        103,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        104,
                        "    cidr_blocks = [aws_security_group.lb-sg.id]\n"
                    ],
                    [
                        105,
                        "  }\n"
                    ],
                    [
                        106,
                        "  ingress {\n"
                    ],
                    [
                        107,
                        "    from_port   = 22\n"
                    ],
                    [
                        108,
                        "    to_port     = 22\n"
                    ],
                    [
                        109,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        110,
                        "    cidr_blocks = [aws_security_group.bastion-sg.id]\n"
                    ],
                    [
                        111,
                        "  }\n"
                    ],
                    [
                        112,
                        "  egress {\n"
                    ],
                    [
                        113,
                        "    from_port   = 0\n"
                    ],
                    [
                        114,
                        "    to_port     = 0\n"
                    ],
                    [
                        115,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        116,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        117,
                        "  }\n"
                    ],
                    [
                        118,
                        "  depends_on = [aws_security_group.lb-sg, aws_security_group.bastion-sg]\n"
                    ],
                    [
                        119,
                        "  tags = {\n"
                    ],
                    [
                        120,
                        "    Name = \"${var.Project}-ec2-sg\"\n"
                    ],
                    [
                        121,
                        "  }\n"
                    ],
                    [
                        122,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/modules/network/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "file_line_range": [
                    96,
                    122
                ],
                "resource": "aws_security_group.ec2-sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${var.Project}-ec2-sg"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf"
            },
            {
                "check_id": "CKV_AWS_24",
                "bc_check_id": "BC_AWS_NETWORKING_1",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        125,
                        "resource \"aws_security_group\" \"lb-sg\" {\n"
                    ],
                    [
                        126,
                        "  vpc_id = aws_vpc.main.id\n"
                    ],
                    [
                        127,
                        "  name   = \"${var.Project}-lb-sg\"\n"
                    ],
                    [
                        128,
                        "  description = \"Allow 80\"\n"
                    ],
                    [
                        129,
                        "  ingress {\n"
                    ],
                    [
                        130,
                        "    from_port   = 80\n"
                    ],
                    [
                        131,
                        "    to_port     = 80\n"
                    ],
                    [
                        132,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        133,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        134,
                        "  }\n"
                    ],
                    [
                        135,
                        "  egress {\n"
                    ],
                    [
                        136,
                        "    from_port   = 0\n"
                    ],
                    [
                        137,
                        "    to_port     = 0\n"
                    ],
                    [
                        138,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        139,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        140,
                        "  }\n"
                    ],
                    [
                        141,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/modules/network/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "file_line_range": [
                    125,
                    141
                ],
                "resource": "aws_security_group.lb-sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf"
            },
            {
                "check_id": "CKV_AWS_277",
                "bc_check_id": "BC_AWS_NETWORKING_78",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        125,
                        "resource \"aws_security_group\" \"lb-sg\" {\n"
                    ],
                    [
                        126,
                        "  vpc_id = aws_vpc.main.id\n"
                    ],
                    [
                        127,
                        "  name   = \"${var.Project}-lb-sg\"\n"
                    ],
                    [
                        128,
                        "  description = \"Allow 80\"\n"
                    ],
                    [
                        129,
                        "  ingress {\n"
                    ],
                    [
                        130,
                        "    from_port   = 80\n"
                    ],
                    [
                        131,
                        "    to_port     = 80\n"
                    ],
                    [
                        132,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        133,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        134,
                        "  }\n"
                    ],
                    [
                        135,
                        "  egress {\n"
                    ],
                    [
                        136,
                        "    from_port   = 0\n"
                    ],
                    [
                        137,
                        "    to_port     = 0\n"
                    ],
                    [
                        138,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        139,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        140,
                        "  }\n"
                    ],
                    [
                        141,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/modules/network/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "file_line_range": [
                    125,
                    141
                ],
                "resource": "aws_security_group.lb-sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngressAny",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf"
            },
            {
                "check_id": "CKV_AWS_25",
                "bc_check_id": "BC_AWS_NETWORKING_2",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        125,
                        "resource \"aws_security_group\" \"lb-sg\" {\n"
                    ],
                    [
                        126,
                        "  vpc_id = aws_vpc.main.id\n"
                    ],
                    [
                        127,
                        "  name   = \"${var.Project}-lb-sg\"\n"
                    ],
                    [
                        128,
                        "  description = \"Allow 80\"\n"
                    ],
                    [
                        129,
                        "  ingress {\n"
                    ],
                    [
                        130,
                        "    from_port   = 80\n"
                    ],
                    [
                        131,
                        "    to_port     = 80\n"
                    ],
                    [
                        132,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        133,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        134,
                        "  }\n"
                    ],
                    [
                        135,
                        "  egress {\n"
                    ],
                    [
                        136,
                        "    from_port   = 0\n"
                    ],
                    [
                        137,
                        "    to_port     = 0\n"
                    ],
                    [
                        138,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        139,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        140,
                        "  }\n"
                    ],
                    [
                        141,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/modules/network/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "file_line_range": [
                    125,
                    141
                ],
                "resource": "aws_security_group.lb-sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf"
            },
            {
                "check_id": "CKV_AWS_260",
                "bc_check_id": "BC_AWS_NETWORKING_67",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        144,
                        "resource \"aws_security_group\" \"bastion-sg\" {\n"
                    ],
                    [
                        145,
                        "  vpc_id = aws_vpc.main.id\n"
                    ],
                    [
                        146,
                        "  name   = \"${var.Project}-bastion-sg\"\n"
                    ],
                    [
                        147,
                        "  description = \"Allow 22\"\n"
                    ],
                    [
                        148,
                        "  ingress {\n"
                    ],
                    [
                        149,
                        "    from_port   = 22\n"
                    ],
                    [
                        150,
                        "    to_port     = 22\n"
                    ],
                    [
                        151,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        152,
                        "    cidr_blocks = [\"18.206.107.24/29\"]\n"
                    ],
                    [
                        153,
                        "  }\n"
                    ],
                    [
                        154,
                        "  egress {\n"
                    ],
                    [
                        155,
                        "    from_port   = 0\n"
                    ],
                    [
                        156,
                        "    to_port     = 0\n"
                    ],
                    [
                        157,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        158,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        159,
                        "  }\n"
                    ],
                    [
                        160,
                        "}"
                    ]
                ],
                "file_path": "/Try_modules/modules/network/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "file_line_range": [
                    144,
                    160
                ],
                "resource": "aws_security_group.bastion-sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress80",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf"
            },
            {
                "check_id": "CKV_AWS_24",
                "bc_check_id": "BC_AWS_NETWORKING_1",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 22",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        144,
                        "resource \"aws_security_group\" \"bastion-sg\" {\n"
                    ],
                    [
                        145,
                        "  vpc_id = aws_vpc.main.id\n"
                    ],
                    [
                        146,
                        "  name   = \"${var.Project}-bastion-sg\"\n"
                    ],
                    [
                        147,
                        "  description = \"Allow 22\"\n"
                    ],
                    [
                        148,
                        "  ingress {\n"
                    ],
                    [
                        149,
                        "    from_port   = 22\n"
                    ],
                    [
                        150,
                        "    to_port     = 22\n"
                    ],
                    [
                        151,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        152,
                        "    cidr_blocks = [\"18.206.107.24/29\"]\n"
                    ],
                    [
                        153,
                        "  }\n"
                    ],
                    [
                        154,
                        "  egress {\n"
                    ],
                    [
                        155,
                        "    from_port   = 0\n"
                    ],
                    [
                        156,
                        "    to_port     = 0\n"
                    ],
                    [
                        157,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        158,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        159,
                        "  }\n"
                    ],
                    [
                        160,
                        "}"
                    ]
                ],
                "file_path": "/Try_modules/modules/network/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "file_line_range": [
                    144,
                    160
                ],
                "resource": "aws_security_group.bastion-sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress22",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-1-port-security",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf"
            },
            {
                "check_id": "CKV_AWS_277",
                "bc_check_id": "BC_AWS_NETWORKING_78",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port -1",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        144,
                        "resource \"aws_security_group\" \"bastion-sg\" {\n"
                    ],
                    [
                        145,
                        "  vpc_id = aws_vpc.main.id\n"
                    ],
                    [
                        146,
                        "  name   = \"${var.Project}-bastion-sg\"\n"
                    ],
                    [
                        147,
                        "  description = \"Allow 22\"\n"
                    ],
                    [
                        148,
                        "  ingress {\n"
                    ],
                    [
                        149,
                        "    from_port   = 22\n"
                    ],
                    [
                        150,
                        "    to_port     = 22\n"
                    ],
                    [
                        151,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        152,
                        "    cidr_blocks = [\"18.206.107.24/29\"]\n"
                    ],
                    [
                        153,
                        "  }\n"
                    ],
                    [
                        154,
                        "  egress {\n"
                    ],
                    [
                        155,
                        "    from_port   = 0\n"
                    ],
                    [
                        156,
                        "    to_port     = 0\n"
                    ],
                    [
                        157,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        158,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        159,
                        "  }\n"
                    ],
                    [
                        160,
                        "}"
                    ]
                ],
                "file_path": "/Try_modules/modules/network/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "file_line_range": [
                    144,
                    160
                ],
                "resource": "aws_security_group.bastion-sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngressAny",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-group-does-not-allow-all-traffic-on-all-ports",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf"
            },
            {
                "check_id": "CKV_AWS_25",
                "bc_check_id": "BC_AWS_NETWORKING_2",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 3389",
                "check_result": {
                    "result": "PASSED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        144,
                        "resource \"aws_security_group\" \"bastion-sg\" {\n"
                    ],
                    [
                        145,
                        "  vpc_id = aws_vpc.main.id\n"
                    ],
                    [
                        146,
                        "  name   = \"${var.Project}-bastion-sg\"\n"
                    ],
                    [
                        147,
                        "  description = \"Allow 22\"\n"
                    ],
                    [
                        148,
                        "  ingress {\n"
                    ],
                    [
                        149,
                        "    from_port   = 22\n"
                    ],
                    [
                        150,
                        "    to_port     = 22\n"
                    ],
                    [
                        151,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        152,
                        "    cidr_blocks = [\"18.206.107.24/29\"]\n"
                    ],
                    [
                        153,
                        "  }\n"
                    ],
                    [
                        154,
                        "  egress {\n"
                    ],
                    [
                        155,
                        "    from_port   = 0\n"
                    ],
                    [
                        156,
                        "    to_port     = 0\n"
                    ],
                    [
                        157,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        158,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        159,
                        "  }\n"
                    ],
                    [
                        160,
                        "}"
                    ]
                ],
                "file_path": "/Try_modules/modules/network/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "file_line_range": [
                    144,
                    160
                ],
                "resource": "aws_security_group.bastion-sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress3389",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-2",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf"
            }
        ],
        "failed_checks": [
            {
                "check_id": "CKV_AWS_23",
                "bc_check_id": "BC_AWS_NETWORKING_31",
                "check_name": "Ensure every security group and rule has a description",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        57,
                        "resource \"aws_security_group\" \"mani_sg\" {\n"
                    ],
                    [
                        58,
                        "  vpc_id = aws_vpc.mani_vpc.id\n"
                    ],
                    [
                        59,
                        "  tags = {\n"
                    ],
                    [
                        60,
                        "    Name = \"mani_sg\"\n"
                    ],
                    [
                        61,
                        "  }\n"
                    ],
                    [
                        62,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    57,
                    62
                ],
                "resource": "aws_security_group.mani_sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mani_sg"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf"
            },
            {
                "check_id": "CKV_AWS_23",
                "bc_check_id": "BC_AWS_NETWORKING_31",
                "check_name": "Ensure every security group and rule has a description",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        65,
                        "resource \"aws_security_group_rule\" \"mani_sg_rule\" {\n"
                    ],
                    [
                        66,
                        "    security_group_id = aws_security_group.mani_sg.id\n"
                    ],
                    [
                        67,
                        "    type        = \"ingress\"\n"
                    ],
                    [
                        68,
                        "    from_port   = 22\n"
                    ],
                    [
                        69,
                        "    to_port     = 22\n"
                    ],
                    [
                        70,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        71,
                        "    cidr_blocks = [var.myIP,\"18.206.107.24/29\"]\n"
                    ],
                    [
                        72,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    65,
                    72
                ],
                "resource": "aws_security_group_rule.mani_sg_rule",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "breadcrumbs": {
                    "cidr_blocks": [
                        {
                            "type": "variable",
                            "name": "myIP",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/variable.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_260",
                "bc_check_id": "BC_AWS_NETWORKING_67",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "from_port",
                        "to_port",
                        "cidr_blocks",
                        "ipv6_cidr_blocks"
                    ]
                },
                "code_block": [
                    [
                        76,
                        "resource \"aws_security_group_rule\" \"mani_sg_rule_80\" {\n"
                    ],
                    [
                        77,
                        "    security_group_id = aws_security_group.mani_sg.id\n"
                    ],
                    [
                        78,
                        "    type        = \"ingress\"\n"
                    ],
                    [
                        79,
                        "    from_port   = 80\n"
                    ],
                    [
                        80,
                        "    to_port     = 80\n"
                    ],
                    [
                        81,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        82,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        83,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    76,
                    83
                ],
                "resource": "aws_security_group_rule.mani_sg_rule_80",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress80",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf"
            },
            {
                "check_id": "CKV_AWS_23",
                "bc_check_id": "BC_AWS_NETWORKING_31",
                "check_name": "Ensure every security group and rule has a description",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        76,
                        "resource \"aws_security_group_rule\" \"mani_sg_rule_80\" {\n"
                    ],
                    [
                        77,
                        "    security_group_id = aws_security_group.mani_sg.id\n"
                    ],
                    [
                        78,
                        "    type        = \"ingress\"\n"
                    ],
                    [
                        79,
                        "    from_port   = 80\n"
                    ],
                    [
                        80,
                        "    to_port     = 80\n"
                    ],
                    [
                        81,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        82,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        83,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    76,
                    83
                ],
                "resource": "aws_security_group_rule.mani_sg_rule_80",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf"
            },
            {
                "check_id": "CKV_AWS_79",
                "bc_check_id": "BC_AWS_GENERAL_31",
                "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "metadata_options/[0]/http_tokens"
                    ]
                },
                "code_block": [
                    [
                        88,
                        "resource \"aws_instance\" \"mani_ec2\" {\n"
                    ],
                    [
                        89,
                        "  ami           = \"ami-06b21ccaeff8cd686\"\n"
                    ],
                    [
                        90,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        91,
                        "  subnet_id     = aws_subnet.mani_subnet.id\n"
                    ],
                    [
                        92,
                        "  security_groups = [aws_security_group.mani_sg.id]\n"
                    ],
                    [
                        93,
                        "  associate_public_ip_address = true\n"
                    ],
                    [
                        94,
                        "  key_name = var.key_name\n"
                    ],
                    [
                        95,
                        "  user_data = <<-EOF\n"
                    ],
                    [
                        96,
                        "              #!/bin/bash\n"
                    ],
                    [
                        97,
                        "              sudo yum update -y\n"
                    ],
                    [
                        98,
                        "              sudo yum install httpd -y\n"
                    ],
                    [
                        99,
                        "              sudo systemctl start httpd\n"
                    ],
                    [
                        100,
                        "              sudo systemctl enable httpd\n"
                    ],
                    [
                        101,
                        "              echo \"<h1>Deployed via Terraform</h1>\" > /var/www/html/index.html\n"
                    ],
                    [
                        102,
                        "              EOF\n"
                    ],
                    [
                        103,
                        "  tags = {\n"
                    ],
                    [
                        104,
                        "    Name = \"mani_ec2\"\n"
                    ],
                    [
                        105,
                        "  }\n"
                    ],
                    [
                        106,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    88,
                    106
                ],
                "resource": "aws_instance.mani_ec2",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mani_ec2"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-31",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "breadcrumbs": {
                    "key_name": [
                        {
                            "type": "tfvar",
                            "name": "key_name",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/terraform.tfvars",
                            "module_connection": false
                        },
                        {
                            "type": "variable",
                            "name": "key_name",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/variable.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_88",
                "bc_check_id": "BC_AWS_PUBLIC_12",
                "check_name": "EC2 instance should not have public IP.",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "associate_public_ip_address"
                    ]
                },
                "code_block": [
                    [
                        88,
                        "resource \"aws_instance\" \"mani_ec2\" {\n"
                    ],
                    [
                        89,
                        "  ami           = \"ami-06b21ccaeff8cd686\"\n"
                    ],
                    [
                        90,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        91,
                        "  subnet_id     = aws_subnet.mani_subnet.id\n"
                    ],
                    [
                        92,
                        "  security_groups = [aws_security_group.mani_sg.id]\n"
                    ],
                    [
                        93,
                        "  associate_public_ip_address = true\n"
                    ],
                    [
                        94,
                        "  key_name = var.key_name\n"
                    ],
                    [
                        95,
                        "  user_data = <<-EOF\n"
                    ],
                    [
                        96,
                        "              #!/bin/bash\n"
                    ],
                    [
                        97,
                        "              sudo yum update -y\n"
                    ],
                    [
                        98,
                        "              sudo yum install httpd -y\n"
                    ],
                    [
                        99,
                        "              sudo systemctl start httpd\n"
                    ],
                    [
                        100,
                        "              sudo systemctl enable httpd\n"
                    ],
                    [
                        101,
                        "              echo \"<h1>Deployed via Terraform</h1>\" > /var/www/html/index.html\n"
                    ],
                    [
                        102,
                        "              EOF\n"
                    ],
                    [
                        103,
                        "  tags = {\n"
                    ],
                    [
                        104,
                        "    Name = \"mani_ec2\"\n"
                    ],
                    [
                        105,
                        "  }\n"
                    ],
                    [
                        106,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    88,
                    106
                ],
                "resource": "aws_instance.mani_ec2",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2PublicIP",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mani_ec2"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/public-policies/public-12",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "breadcrumbs": {
                    "key_name": [
                        {
                            "type": "tfvar",
                            "name": "key_name",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/terraform.tfvars",
                            "module_connection": false
                        },
                        {
                            "type": "variable",
                            "name": "key_name",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/variable.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_126",
                "bc_check_id": "BC_AWS_LOGGING_26",
                "check_name": "Ensure that detailed monitoring is enabled for EC2 instances",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "monitoring"
                    ]
                },
                "code_block": [
                    [
                        88,
                        "resource \"aws_instance\" \"mani_ec2\" {\n"
                    ],
                    [
                        89,
                        "  ami           = \"ami-06b21ccaeff8cd686\"\n"
                    ],
                    [
                        90,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        91,
                        "  subnet_id     = aws_subnet.mani_subnet.id\n"
                    ],
                    [
                        92,
                        "  security_groups = [aws_security_group.mani_sg.id]\n"
                    ],
                    [
                        93,
                        "  associate_public_ip_address = true\n"
                    ],
                    [
                        94,
                        "  key_name = var.key_name\n"
                    ],
                    [
                        95,
                        "  user_data = <<-EOF\n"
                    ],
                    [
                        96,
                        "              #!/bin/bash\n"
                    ],
                    [
                        97,
                        "              sudo yum update -y\n"
                    ],
                    [
                        98,
                        "              sudo yum install httpd -y\n"
                    ],
                    [
                        99,
                        "              sudo systemctl start httpd\n"
                    ],
                    [
                        100,
                        "              sudo systemctl enable httpd\n"
                    ],
                    [
                        101,
                        "              echo \"<h1>Deployed via Terraform</h1>\" > /var/www/html/index.html\n"
                    ],
                    [
                        102,
                        "              EOF\n"
                    ],
                    [
                        103,
                        "  tags = {\n"
                    ],
                    [
                        104,
                        "    Name = \"mani_ec2\"\n"
                    ],
                    [
                        105,
                        "  }\n"
                    ],
                    [
                        106,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    88,
                    106
                ],
                "resource": "aws_instance.mani_ec2",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2DetailedMonitoringEnabled",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mani_ec2"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/ensure-that-detailed-monitoring-is-enabled-for-ec2-instances",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "breadcrumbs": {
                    "key_name": [
                        {
                            "type": "tfvar",
                            "name": "key_name",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/terraform.tfvars",
                            "module_connection": false
                        },
                        {
                            "type": "variable",
                            "name": "key_name",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/variable.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_135",
                "bc_check_id": "BC_AWS_GENERAL_68",
                "check_name": "Ensure that EC2 is EBS optimized",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "ebs_optimized"
                    ]
                },
                "code_block": [
                    [
                        88,
                        "resource \"aws_instance\" \"mani_ec2\" {\n"
                    ],
                    [
                        89,
                        "  ami           = \"ami-06b21ccaeff8cd686\"\n"
                    ],
                    [
                        90,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        91,
                        "  subnet_id     = aws_subnet.mani_subnet.id\n"
                    ],
                    [
                        92,
                        "  security_groups = [aws_security_group.mani_sg.id]\n"
                    ],
                    [
                        93,
                        "  associate_public_ip_address = true\n"
                    ],
                    [
                        94,
                        "  key_name = var.key_name\n"
                    ],
                    [
                        95,
                        "  user_data = <<-EOF\n"
                    ],
                    [
                        96,
                        "              #!/bin/bash\n"
                    ],
                    [
                        97,
                        "              sudo yum update -y\n"
                    ],
                    [
                        98,
                        "              sudo yum install httpd -y\n"
                    ],
                    [
                        99,
                        "              sudo systemctl start httpd\n"
                    ],
                    [
                        100,
                        "              sudo systemctl enable httpd\n"
                    ],
                    [
                        101,
                        "              echo \"<h1>Deployed via Terraform</h1>\" > /var/www/html/index.html\n"
                    ],
                    [
                        102,
                        "              EOF\n"
                    ],
                    [
                        103,
                        "  tags = {\n"
                    ],
                    [
                        104,
                        "    Name = \"mani_ec2\"\n"
                    ],
                    [
                        105,
                        "  }\n"
                    ],
                    [
                        106,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    88,
                    106
                ],
                "resource": "aws_instance.mani_ec2",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.EC2EBSOptimized",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mani_ec2"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-that-ec2-is-ebs-optimized",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "breadcrumbs": {
                    "key_name": [
                        {
                            "type": "tfvar",
                            "name": "key_name",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/terraform.tfvars",
                            "module_connection": false
                        },
                        {
                            "type": "variable",
                            "name": "key_name",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/variable.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_8",
                "bc_check_id": "BC_AWS_GENERAL_13",
                "check_name": "Ensure all data stored in the Launch configuration or instance Elastic Blocks Store is securely encrypted",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "root_block_device"
                    ]
                },
                "code_block": [
                    [
                        88,
                        "resource \"aws_instance\" \"mani_ec2\" {\n"
                    ],
                    [
                        89,
                        "  ami           = \"ami-06b21ccaeff8cd686\"\n"
                    ],
                    [
                        90,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        91,
                        "  subnet_id     = aws_subnet.mani_subnet.id\n"
                    ],
                    [
                        92,
                        "  security_groups = [aws_security_group.mani_sg.id]\n"
                    ],
                    [
                        93,
                        "  associate_public_ip_address = true\n"
                    ],
                    [
                        94,
                        "  key_name = var.key_name\n"
                    ],
                    [
                        95,
                        "  user_data = <<-EOF\n"
                    ],
                    [
                        96,
                        "              #!/bin/bash\n"
                    ],
                    [
                        97,
                        "              sudo yum update -y\n"
                    ],
                    [
                        98,
                        "              sudo yum install httpd -y\n"
                    ],
                    [
                        99,
                        "              sudo systemctl start httpd\n"
                    ],
                    [
                        100,
                        "              sudo systemctl enable httpd\n"
                    ],
                    [
                        101,
                        "              echo \"<h1>Deployed via Terraform</h1>\" > /var/www/html/index.html\n"
                    ],
                    [
                        102,
                        "              EOF\n"
                    ],
                    [
                        103,
                        "  tags = {\n"
                    ],
                    [
                        104,
                        "    Name = \"mani_ec2\"\n"
                    ],
                    [
                        105,
                        "  }\n"
                    ],
                    [
                        106,
                        "}\n"
                    ]
                ],
                "file_path": "/Day1/Task2/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "file_line_range": [
                    88,
                    106
                ],
                "resource": "aws_instance.mani_ec2",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LaunchConfigurationEBSEncryption",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mani_ec2"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-13",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/main.tf",
                "breadcrumbs": {
                    "key_name": [
                        {
                            "type": "tfvar",
                            "name": "key_name",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/terraform.tfvars",
                            "module_connection": false
                        },
                        {
                            "type": "variable",
                            "name": "key_name",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day1/Task2/variable.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_130",
                "bc_check_id": "BC_AWS_NETWORKING_53",
                "check_name": "Ensure VPC subnets do not assign public IP by default",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "map_public_ip_on_launch"
                    ]
                },
                "code_block": [
                    [
                        14,
                        "resource \"aws_subnet\" \"public_subnet\" {\n"
                    ],
                    [
                        15,
                        "  count = 2\n"
                    ],
                    [
                        16,
                        "  vpc_id                  = aws_vpc.main_vpc.id\n"
                    ],
                    [
                        17,
                        "  cidr_block              = \"10.0.${count.index}.0/24\"\n"
                    ],
                    [
                        18,
                        "  availability_zone       = data.aws_availability_zones.available.names[count.index]\n"
                    ],
                    [
                        19,
                        "  map_public_ip_on_launch = true\n"
                    ],
                    [
                        20,
                        "\n"
                    ],
                    [
                        21,
                        "  tags = {\n"
                    ],
                    [
                        22,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        23,
                        "    Name = \"public-subnet-${count.index}\"\n"
                    ],
                    [
                        24,
                        "  }\n"
                    ],
                    [
                        25,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    14,
                    25
                ],
                "resource": "aws_subnet.public_subnet[0]",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SubnetPublicIP",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "public-subnet-0",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-vpc-subnets-do-not-assign-public-ip-by-default",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_260",
                "bc_check_id": "BC_AWS_NETWORKING_67",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "ingress/[0]/from_port",
                        "ingress/[0]/to_port",
                        "ingress/[0]/cidr_blocks",
                        "ingress/[0]/ipv6_cidr_blocks"
                    ]
                },
                "code_block": [
                    [
                        65,
                        "resource \"aws_security_group\" \"alb_sg\" {\n"
                    ],
                    [
                        66,
                        "  vpc_id = aws_vpc.main_vpc.id\n"
                    ],
                    [
                        67,
                        "\n"
                    ],
                    [
                        68,
                        "  ingress {\n"
                    ],
                    [
                        69,
                        "    from_port   = 80\n"
                    ],
                    [
                        70,
                        "    to_port     = 80\n"
                    ],
                    [
                        71,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        72,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        73,
                        "  }\n"
                    ],
                    [
                        74,
                        "\n"
                    ],
                    [
                        75,
                        "  egress {\n"
                    ],
                    [
                        76,
                        "    from_port   = 0\n"
                    ],
                    [
                        77,
                        "    to_port     = 0\n"
                    ],
                    [
                        78,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        79,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        80,
                        "  }\n"
                    ],
                    [
                        81,
                        "\n"
                    ],
                    [
                        82,
                        "  tags = {\n"
                    ],
                    [
                        83,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        84,
                        "    Name = \"alb-sg\"\n"
                    ],
                    [
                        85,
                        "  }\n"
                    ],
                    [
                        86,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    65,
                    86
                ],
                "resource": "aws_security_group.alb_sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress80",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "alb-sg",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_23",
                "bc_check_id": "BC_AWS_NETWORKING_31",
                "check_name": "Ensure every security group and rule has a description",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "egress/[0]",
                        "ingress/[0]"
                    ]
                },
                "code_block": [
                    [
                        65,
                        "resource \"aws_security_group\" \"alb_sg\" {\n"
                    ],
                    [
                        66,
                        "  vpc_id = aws_vpc.main_vpc.id\n"
                    ],
                    [
                        67,
                        "\n"
                    ],
                    [
                        68,
                        "  ingress {\n"
                    ],
                    [
                        69,
                        "    from_port   = 80\n"
                    ],
                    [
                        70,
                        "    to_port     = 80\n"
                    ],
                    [
                        71,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        72,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        73,
                        "  }\n"
                    ],
                    [
                        74,
                        "\n"
                    ],
                    [
                        75,
                        "  egress {\n"
                    ],
                    [
                        76,
                        "    from_port   = 0\n"
                    ],
                    [
                        77,
                        "    to_port     = 0\n"
                    ],
                    [
                        78,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        79,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        80,
                        "  }\n"
                    ],
                    [
                        81,
                        "\n"
                    ],
                    [
                        82,
                        "  tags = {\n"
                    ],
                    [
                        83,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        84,
                        "    Name = \"alb-sg\"\n"
                    ],
                    [
                        85,
                        "  }\n"
                    ],
                    [
                        86,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    65,
                    86
                ],
                "resource": "aws_security_group.alb_sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "alb-sg",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_23",
                "bc_check_id": "BC_AWS_NETWORKING_31",
                "check_name": "Ensure every security group and rule has a description",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "egress/[0]",
                        "ingress/[0]"
                    ]
                },
                "code_block": [
                    [
                        88,
                        "resource \"aws_security_group\" \"ec2_sg\" {\n"
                    ],
                    [
                        89,
                        "  vpc_id = aws_vpc.main_vpc.id\n"
                    ],
                    [
                        90,
                        "\n"
                    ],
                    [
                        91,
                        "  ingress {\n"
                    ],
                    [
                        92,
                        "    from_port   = 80\n"
                    ],
                    [
                        93,
                        "    to_port     = 80\n"
                    ],
                    [
                        94,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        95,
                        "    security_groups = [aws_security_group.alb_sg.id]\n"
                    ],
                    [
                        96,
                        "  }\n"
                    ],
                    [
                        97,
                        "\n"
                    ],
                    [
                        98,
                        "  egress {\n"
                    ],
                    [
                        99,
                        "    from_port   = 0\n"
                    ],
                    [
                        100,
                        "    to_port     = 0\n"
                    ],
                    [
                        101,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        102,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        103,
                        "  }\n"
                    ],
                    [
                        104,
                        "\n"
                    ],
                    [
                        105,
                        "  tags = {\n"
                    ],
                    [
                        106,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        107,
                        "    Name = \"ec2-sg\"\n"
                    ],
                    [
                        108,
                        "  }\n"
                    ],
                    [
                        109,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    88,
                    109
                ],
                "resource": "aws_security_group.ec2_sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "ec2-sg",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_23",
                "bc_check_id": "BC_AWS_NETWORKING_31",
                "check_name": "Ensure every security group and rule has a description",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "egress/[0]",
                        "ingress/[0]"
                    ]
                },
                "code_block": [
                    [
                        111,
                        "resource \"aws_security_group\" \"rds_sg\" {\n"
                    ],
                    [
                        112,
                        "  vpc_id = aws_vpc.main_vpc.id\n"
                    ],
                    [
                        113,
                        "\n"
                    ],
                    [
                        114,
                        "  ingress {\n"
                    ],
                    [
                        115,
                        "    from_port   = 3306\n"
                    ],
                    [
                        116,
                        "    to_port     = 3306\n"
                    ],
                    [
                        117,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        118,
                        "    cidr_blocks = [\"10.0.0.0/16\"]\n"
                    ],
                    [
                        119,
                        "  }\n"
                    ],
                    [
                        120,
                        "\n"
                    ],
                    [
                        121,
                        "  egress {\n"
                    ],
                    [
                        122,
                        "    from_port   = 0\n"
                    ],
                    [
                        123,
                        "    to_port     = 0\n"
                    ],
                    [
                        124,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        125,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        126,
                        "  }\n"
                    ],
                    [
                        127,
                        "\n"
                    ],
                    [
                        128,
                        "  tags = {\n"
                    ],
                    [
                        129,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        130,
                        "    Name = \"rds-sg\"\n"
                    ],
                    [
                        131,
                        "  }\n"
                    ],
                    [
                        132,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    111,
                    132
                ],
                "resource": "aws_security_group.rds_sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "rds-sg",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_79",
                "bc_check_id": "BC_AWS_GENERAL_31",
                "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "metadata_options/[0]/http_tokens"
                    ]
                },
                "code_block": [
                    [
                        134,
                        "resource \"aws_launch_template\" \"apache_lt\" {\n"
                    ],
                    [
                        135,
                        "  name_prefix   = \"apache-lt-\"\n"
                    ],
                    [
                        136,
                        "  \n"
                    ],
                    [
                        137,
                        "  image_id      = var.ami_id\n"
                    ],
                    [
                        138,
                        "  instance_type = \"t2.micro\"\n"
                    ],
                    [
                        139,
                        "\n"
                    ],
                    [
                        140,
                        "  user_data = base64encode(<<-EOF\n"
                    ],
                    [
                        141,
                        "              #!/bin/bash\n"
                    ],
                    [
                        142,
                        "              yum update -y\n"
                    ],
                    [
                        143,
                        "              yum install httpd -y\n"
                    ],
                    [
                        144,
                        "              systemctl start httpd\n"
                    ],
                    [
                        145,
                        "              systemctl enable httpd\n"
                    ],
                    [
                        146,
                        "              \n"
                    ],
                    [
                        147,
                        "EOF\n"
                    ],
                    [
                        148,
                        ")\n"
                    ],
                    [
                        149,
                        "\n"
                    ],
                    [
                        150,
                        "  network_interfaces {\n"
                    ],
                    [
                        151,
                        "    security_groups = [aws_security_group.ec2_sg.id]\n"
                    ],
                    [
                        152,
                        "  }\n"
                    ],
                    [
                        153,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    134,
                    153
                ],
                "resource": "aws_launch_template.apache_lt",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-31",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "breadcrumbs": {
                    "image_id": [
                        {
                            "type": "variable",
                            "name": "ami_id",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/variables.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_153",
                "bc_check_id": "BC_AWS_GENERAL_82",
                "check_name": "Autoscaling groups should supply tags to launch configurations",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "tag",
                        "tags"
                    ]
                },
                "code_block": [
                    [
                        159,
                        "resource \"aws_autoscaling_group\" \"apache_asg\" {\n"
                    ],
                    [
                        160,
                        "  vpc_zone_identifier         = aws_subnet.public_subnet.*.id\n"
                    ],
                    [
                        161,
                        "  max_size                    = 2\n"
                    ],
                    [
                        162,
                        "  min_size                    = 1\n"
                    ],
                    [
                        163,
                        "  desired_capacity            = 1\n"
                    ],
                    [
                        164,
                        "  launch_template {\n"
                    ],
                    [
                        165,
                        "    id      = aws_launch_template.apache_lt.id\n"
                    ],
                    [
                        166,
                        "    version = \"$Latest\"\n"
                    ],
                    [
                        167,
                        "  }\n"
                    ],
                    [
                        168,
                        "  target_group_arns = [aws_lb_target_group.apache_tg.arn]\n"
                    ],
                    [
                        169,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    159,
                    169
                ],
                "resource": "aws_autoscaling_group.apache_asg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.AutoScalingTagging",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/autoscaling-groups-should-supply-tags-to-launch-configurations",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_150",
                "bc_check_id": "BC_AWS_NETWORKING_62",
                "check_name": "Ensure that Load Balancer has deletion protection enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "enable_deletion_protection"
                    ]
                },
                "code_block": [
                    [
                        171,
                        "resource \"aws_lb\" \"apache_lb\" {\n"
                    ],
                    [
                        172,
                        "  name               = \"apache-alb\"\n"
                    ],
                    [
                        173,
                        "  internal           = false\n"
                    ],
                    [
                        174,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        175,
                        "  security_groups    = [aws_security_group.alb_sg.id]\n"
                    ],
                    [
                        176,
                        "  subnets            = aws_subnet.public_subnet.*.id\n"
                    ],
                    [
                        177,
                        "\n"
                    ],
                    [
                        178,
                        "  tags = {\n"
                    ],
                    [
                        179,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        180,
                        "    Name = \"apache-lb\"\n"
                    ],
                    [
                        181,
                        "  }\n"
                    ],
                    [
                        182,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    171,
                    182
                ],
                "resource": "aws_lb.apache_lb",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LBDeletionProtection",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "apache-lb",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-150",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_91",
                "bc_check_id": "BC_AWS_LOGGING_22",
                "check_name": "Ensure the ELBv2 (Application/Network) has access logging enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "access_logs/0/enabled/0"
                    ]
                },
                "code_block": [
                    [
                        171,
                        "resource \"aws_lb\" \"apache_lb\" {\n"
                    ],
                    [
                        172,
                        "  name               = \"apache-alb\"\n"
                    ],
                    [
                        173,
                        "  internal           = false\n"
                    ],
                    [
                        174,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        175,
                        "  security_groups    = [aws_security_group.alb_sg.id]\n"
                    ],
                    [
                        176,
                        "  subnets            = aws_subnet.public_subnet.*.id\n"
                    ],
                    [
                        177,
                        "\n"
                    ],
                    [
                        178,
                        "  tags = {\n"
                    ],
                    [
                        179,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        180,
                        "    Name = \"apache-lb\"\n"
                    ],
                    [
                        181,
                        "  }\n"
                    ],
                    [
                        182,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    171,
                    182
                ],
                "resource": "aws_lb.apache_lb",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ELBv2AccessLogs",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "apache-lb",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-logging-22",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_131",
                "bc_check_id": "BC_AWS_NETWORKING_41",
                "check_name": "Ensure that ALB drops HTTP headers",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "drop_invalid_header_fields"
                    ]
                },
                "code_block": [
                    [
                        171,
                        "resource \"aws_lb\" \"apache_lb\" {\n"
                    ],
                    [
                        172,
                        "  name               = \"apache-alb\"\n"
                    ],
                    [
                        173,
                        "  internal           = false\n"
                    ],
                    [
                        174,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        175,
                        "  security_groups    = [aws_security_group.alb_sg.id]\n"
                    ],
                    [
                        176,
                        "  subnets            = aws_subnet.public_subnet.*.id\n"
                    ],
                    [
                        177,
                        "\n"
                    ],
                    [
                        178,
                        "  tags = {\n"
                    ],
                    [
                        179,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        180,
                        "    Name = \"apache-lb\"\n"
                    ],
                    [
                        181,
                        "  }\n"
                    ],
                    [
                        182,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    171,
                    182
                ],
                "resource": "aws_lb.apache_lb",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ALBDropHttpHeaders",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "apache-lb",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-alb-drops-http-headers",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_378",
                "bc_check_id": null,
                "check_name": "Ensure AWS Load Balancer doesn't use HTTP protocol",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "protocol"
                    ]
                },
                "code_block": [
                    [
                        188,
                        "resource \"aws_lb_target_group\" \"apache_tg\" {\n"
                    ],
                    [
                        189,
                        "  port     = 80\n"
                    ],
                    [
                        190,
                        "  protocol = \"HTTP\"\n"
                    ],
                    [
                        191,
                        "  vpc_id   = aws_vpc.main_vpc.id\n"
                    ],
                    [
                        192,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    188,
                    192
                ],
                "resource": "aws_lb_target_group.apache_tg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LBTargetGroup",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": {},
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": null,
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_261",
                "bc_check_id": "BC_AWS_GENERAL_177",
                "check_name": "Ensure HTTP HTTPS Target group defines Healthcheck",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "health_check"
                    ]
                },
                "code_block": [
                    [
                        188,
                        "resource \"aws_lb_target_group\" \"apache_tg\" {\n"
                    ],
                    [
                        189,
                        "  port     = 80\n"
                    ],
                    [
                        190,
                        "  protocol = \"HTTP\"\n"
                    ],
                    [
                        191,
                        "  vpc_id   = aws_vpc.main_vpc.id\n"
                    ],
                    [
                        192,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    188,
                    192
                ],
                "resource": "aws_lb_target_group.apache_tg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LBTargetGroupsDefinesHealthcheck",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-kendra-index-server-side-encryption-uses-customer-managed-keys-cmks",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_2",
                "bc_check_id": "BC_AWS_NETWORKING_29",
                "check_name": "Ensure ALB protocol is HTTPS",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "protocol"
                    ]
                },
                "code_block": [
                    [
                        194,
                        "resource \"aws_lb_listener\" \"apache_listener\" {\n"
                    ],
                    [
                        195,
                        "  load_balancer_arn = aws_lb.apache_lb.arn\n"
                    ],
                    [
                        196,
                        "  port              = 80\n"
                    ],
                    [
                        197,
                        "  protocol          = \"HTTP\"\n"
                    ],
                    [
                        198,
                        "\n"
                    ],
                    [
                        199,
                        "  default_action {\n"
                    ],
                    [
                        200,
                        "    type             = \"forward\"\n"
                    ],
                    [
                        201,
                        "    target_group_arn = aws_lb_target_group.apache_tg.arn\n"
                    ],
                    [
                        202,
                        "  }\n"
                    ],
                    [
                        203,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    194,
                    203
                ],
                "resource": "aws_lb_listener.apache_listener",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ALBListenerHTTPS",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-29",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_161",
                "bc_check_id": "BC_AWS_IAM_65",
                "check_name": "Ensure RDS database has IAM authentication enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "iam_database_authentication_enabled"
                    ]
                },
                "code_block": [
                    [
                        205,
                        "resource \"aws_db_instance\" \"mysql\" {\n"
                    ],
                    [
                        206,
                        "  allocated_storage    = 20\n"
                    ],
                    [
                        207,
                        "  engine               = \"mysql\"\n"
                    ],
                    [
                        208,
                        "  engine_version = \"8.0\"\n"
                    ],
                    [
                        209,
                        "  instance_class = \"db.t3.micro\"\n"
                    ],
                    [
                        210,
                        "  username             = \"admin\"\n"
                    ],
                    [
                        211,
                        "  pa**********             = \"password\"\n"
                    ],
                    [
                        212,
                        "  vpc_security_group_ids = [aws_security_group.rds_sg.id]\n"
                    ],
                    [
                        213,
                        "  db_subnet_group_name = aws_db_subnet_group.main.name\n"
                    ],
                    [
                        214,
                        "  port                 = 3306\n"
                    ],
                    [
                        215,
                        "  skip_final_snapshot    = true\n"
                    ],
                    [
                        216,
                        "\n"
                    ],
                    [
                        217,
                        "  tags = {\n"
                    ],
                    [
                        218,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        219,
                        "    Name = \"mysql-db\"\n"
                    ],
                    [
                        220,
                        "  }\n"
                    ],
                    [
                        221,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    205,
                    221
                ],
                "resource": "aws_db_instance.mysql",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.RDSIAMAuthentication",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mysql-db",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-rds-database-has-iam-authentication-enabled",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "breadcrumbs": {
                    "db_subnet_group_name": [
                        {
                            "type": "resource",
                            "name": "aws_db_subnet_group.main",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_354",
                "bc_check_id": "BC_AWS_GENERAL_254",
                "check_name": "Ensure RDS Performance Insights are encrypted using KMS CMKs",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "performance_insights_kms_key_id"
                    ]
                },
                "code_block": [
                    [
                        205,
                        "resource \"aws_db_instance\" \"mysql\" {\n"
                    ],
                    [
                        206,
                        "  allocated_storage    = 20\n"
                    ],
                    [
                        207,
                        "  engine               = \"mysql\"\n"
                    ],
                    [
                        208,
                        "  engine_version = \"8.0\"\n"
                    ],
                    [
                        209,
                        "  instance_class = \"db.t3.micro\"\n"
                    ],
                    [
                        210,
                        "  username             = \"admin\"\n"
                    ],
                    [
                        211,
                        "  pa**********             = \"password\"\n"
                    ],
                    [
                        212,
                        "  vpc_security_group_ids = [aws_security_group.rds_sg.id]\n"
                    ],
                    [
                        213,
                        "  db_subnet_group_name = aws_db_subnet_group.main.name\n"
                    ],
                    [
                        214,
                        "  port                 = 3306\n"
                    ],
                    [
                        215,
                        "  skip_final_snapshot    = true\n"
                    ],
                    [
                        216,
                        "\n"
                    ],
                    [
                        217,
                        "  tags = {\n"
                    ],
                    [
                        218,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        219,
                        "    Name = \"mysql-db\"\n"
                    ],
                    [
                        220,
                        "  }\n"
                    ],
                    [
                        221,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    205,
                    221
                ],
                "resource": "aws_db_instance.mysql",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.RDSInstancePerfInsightsEncryptionWithCMK",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mysql-db",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-354",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "breadcrumbs": {
                    "db_subnet_group_name": [
                        {
                            "type": "resource",
                            "name": "aws_db_subnet_group.main",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_293",
                "bc_check_id": "BC_AWS_GENERAL_208",
                "check_name": "Ensure that AWS database instances have deletion protection enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "deletion_protection"
                    ]
                },
                "code_block": [
                    [
                        205,
                        "resource \"aws_db_instance\" \"mysql\" {\n"
                    ],
                    [
                        206,
                        "  allocated_storage    = 20\n"
                    ],
                    [
                        207,
                        "  engine               = \"mysql\"\n"
                    ],
                    [
                        208,
                        "  engine_version = \"8.0\"\n"
                    ],
                    [
                        209,
                        "  instance_class = \"db.t3.micro\"\n"
                    ],
                    [
                        210,
                        "  username             = \"admin\"\n"
                    ],
                    [
                        211,
                        "  pa**********             = \"password\"\n"
                    ],
                    [
                        212,
                        "  vpc_security_group_ids = [aws_security_group.rds_sg.id]\n"
                    ],
                    [
                        213,
                        "  db_subnet_group_name = aws_db_subnet_group.main.name\n"
                    ],
                    [
                        214,
                        "  port                 = 3306\n"
                    ],
                    [
                        215,
                        "  skip_final_snapshot    = true\n"
                    ],
                    [
                        216,
                        "\n"
                    ],
                    [
                        217,
                        "  tags = {\n"
                    ],
                    [
                        218,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        219,
                        "    Name = \"mysql-db\"\n"
                    ],
                    [
                        220,
                        "  }\n"
                    ],
                    [
                        221,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    205,
                    221
                ],
                "resource": "aws_db_instance.mysql",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.RDSInstanceDeletionProtection",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mysql-db",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-293",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "breadcrumbs": {
                    "db_subnet_group_name": [
                        {
                            "type": "resource",
                            "name": "aws_db_subnet_group.main",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_157",
                "bc_check_id": "BC_AWS_GENERAL_73",
                "check_name": "Ensure that RDS instances have Multi-AZ enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "multi_az"
                    ]
                },
                "code_block": [
                    [
                        205,
                        "resource \"aws_db_instance\" \"mysql\" {\n"
                    ],
                    [
                        206,
                        "  allocated_storage    = 20\n"
                    ],
                    [
                        207,
                        "  engine               = \"mysql\"\n"
                    ],
                    [
                        208,
                        "  engine_version = \"8.0\"\n"
                    ],
                    [
                        209,
                        "  instance_class = \"db.t3.micro\"\n"
                    ],
                    [
                        210,
                        "  username             = \"admin\"\n"
                    ],
                    [
                        211,
                        "  pa**********             = \"password\"\n"
                    ],
                    [
                        212,
                        "  vpc_security_group_ids = [aws_security_group.rds_sg.id]\n"
                    ],
                    [
                        213,
                        "  db_subnet_group_name = aws_db_subnet_group.main.name\n"
                    ],
                    [
                        214,
                        "  port                 = 3306\n"
                    ],
                    [
                        215,
                        "  skip_final_snapshot    = true\n"
                    ],
                    [
                        216,
                        "\n"
                    ],
                    [
                        217,
                        "  tags = {\n"
                    ],
                    [
                        218,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        219,
                        "    Name = \"mysql-db\"\n"
                    ],
                    [
                        220,
                        "  }\n"
                    ],
                    [
                        221,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    205,
                    221
                ],
                "resource": "aws_db_instance.mysql",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.RDSMultiAZEnabled",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mysql-db",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-73",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "breadcrumbs": {
                    "db_subnet_group_name": [
                        {
                            "type": "resource",
                            "name": "aws_db_subnet_group.main",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_129",
                "bc_check_id": "BC_AWS_IAM_60",
                "check_name": "Ensure that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "enabled_cloudwatch_logs_exports/[0]"
                    ]
                },
                "code_block": [
                    [
                        205,
                        "resource \"aws_db_instance\" \"mysql\" {\n"
                    ],
                    [
                        206,
                        "  allocated_storage    = 20\n"
                    ],
                    [
                        207,
                        "  engine               = \"mysql\"\n"
                    ],
                    [
                        208,
                        "  engine_version = \"8.0\"\n"
                    ],
                    [
                        209,
                        "  instance_class = \"db.t3.micro\"\n"
                    ],
                    [
                        210,
                        "  username             = \"admin\"\n"
                    ],
                    [
                        211,
                        "  pa**********             = \"password\"\n"
                    ],
                    [
                        212,
                        "  vpc_security_group_ids = [aws_security_group.rds_sg.id]\n"
                    ],
                    [
                        213,
                        "  db_subnet_group_name = aws_db_subnet_group.main.name\n"
                    ],
                    [
                        214,
                        "  port                 = 3306\n"
                    ],
                    [
                        215,
                        "  skip_final_snapshot    = true\n"
                    ],
                    [
                        216,
                        "\n"
                    ],
                    [
                        217,
                        "  tags = {\n"
                    ],
                    [
                        218,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        219,
                        "    Name = \"mysql-db\"\n"
                    ],
                    [
                        220,
                        "  }\n"
                    ],
                    [
                        221,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    205,
                    221
                ],
                "resource": "aws_db_instance.mysql",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.DBInstanceLogging",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mysql-db",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-iam-policies/ensure-that-respective-logs-of-amazon-relational-database-service-amazon-rds-are-enabled",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "breadcrumbs": {
                    "db_subnet_group_name": [
                        {
                            "type": "resource",
                            "name": "aws_db_subnet_group.main",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_226",
                "bc_check_id": "BC_AWS_GENERAL_121",
                "check_name": "Ensure DB instance gets all minor upgrades automatically",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "auto_minor_version_upgrade"
                    ]
                },
                "code_block": [
                    [
                        205,
                        "resource \"aws_db_instance\" \"mysql\" {\n"
                    ],
                    [
                        206,
                        "  allocated_storage    = 20\n"
                    ],
                    [
                        207,
                        "  engine               = \"mysql\"\n"
                    ],
                    [
                        208,
                        "  engine_version = \"8.0\"\n"
                    ],
                    [
                        209,
                        "  instance_class = \"db.t3.micro\"\n"
                    ],
                    [
                        210,
                        "  username             = \"admin\"\n"
                    ],
                    [
                        211,
                        "  pa**********             = \"password\"\n"
                    ],
                    [
                        212,
                        "  vpc_security_group_ids = [aws_security_group.rds_sg.id]\n"
                    ],
                    [
                        213,
                        "  db_subnet_group_name = aws_db_subnet_group.main.name\n"
                    ],
                    [
                        214,
                        "  port                 = 3306\n"
                    ],
                    [
                        215,
                        "  skip_final_snapshot    = true\n"
                    ],
                    [
                        216,
                        "\n"
                    ],
                    [
                        217,
                        "  tags = {\n"
                    ],
                    [
                        218,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        219,
                        "    Name = \"mysql-db\"\n"
                    ],
                    [
                        220,
                        "  }\n"
                    ],
                    [
                        221,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    205,
                    221
                ],
                "resource": "aws_db_instance.mysql",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.DBInstanceMinorUpgrade",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mysql-db",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-db-instance-gets-all-minor-upgrades-automatically",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "breadcrumbs": {
                    "db_subnet_group_name": [
                        {
                            "type": "resource",
                            "name": "aws_db_subnet_group.main",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_118",
                "bc_check_id": "BC_AWS_LOGGING_28",
                "check_name": "Ensure that enhanced monitoring is enabled for Amazon RDS instances",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "monitoring_interval"
                    ]
                },
                "code_block": [
                    [
                        205,
                        "resource \"aws_db_instance\" \"mysql\" {\n"
                    ],
                    [
                        206,
                        "  allocated_storage    = 20\n"
                    ],
                    [
                        207,
                        "  engine               = \"mysql\"\n"
                    ],
                    [
                        208,
                        "  engine_version = \"8.0\"\n"
                    ],
                    [
                        209,
                        "  instance_class = \"db.t3.micro\"\n"
                    ],
                    [
                        210,
                        "  username             = \"admin\"\n"
                    ],
                    [
                        211,
                        "  pa**********             = \"password\"\n"
                    ],
                    [
                        212,
                        "  vpc_security_group_ids = [aws_security_group.rds_sg.id]\n"
                    ],
                    [
                        213,
                        "  db_subnet_group_name = aws_db_subnet_group.main.name\n"
                    ],
                    [
                        214,
                        "  port                 = 3306\n"
                    ],
                    [
                        215,
                        "  skip_final_snapshot    = true\n"
                    ],
                    [
                        216,
                        "\n"
                    ],
                    [
                        217,
                        "  tags = {\n"
                    ],
                    [
                        218,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        219,
                        "    Name = \"mysql-db\"\n"
                    ],
                    [
                        220,
                        "  }\n"
                    ],
                    [
                        221,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    205,
                    221
                ],
                "resource": "aws_db_instance.mysql",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.RDSEnhancedMonitorEnabled",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mysql-db",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/ensure-that-enhanced-monitoring-is-enabled-for-amazon-rds-instances",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "breadcrumbs": {
                    "db_subnet_group_name": [
                        {
                            "type": "resource",
                            "name": "aws_db_subnet_group.main",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_16",
                "bc_check_id": "BC_AWS_GENERAL_4",
                "check_name": "Ensure all data stored in the RDS is securely encrypted at rest",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "storage_encrypted"
                    ]
                },
                "code_block": [
                    [
                        205,
                        "resource \"aws_db_instance\" \"mysql\" {\n"
                    ],
                    [
                        206,
                        "  allocated_storage    = 20\n"
                    ],
                    [
                        207,
                        "  engine               = \"mysql\"\n"
                    ],
                    [
                        208,
                        "  engine_version = \"8.0\"\n"
                    ],
                    [
                        209,
                        "  instance_class = \"db.t3.micro\"\n"
                    ],
                    [
                        210,
                        "  username             = \"admin\"\n"
                    ],
                    [
                        211,
                        "  pa**********             = \"password\"\n"
                    ],
                    [
                        212,
                        "  vpc_security_group_ids = [aws_security_group.rds_sg.id]\n"
                    ],
                    [
                        213,
                        "  db_subnet_group_name = aws_db_subnet_group.main.name\n"
                    ],
                    [
                        214,
                        "  port                 = 3306\n"
                    ],
                    [
                        215,
                        "  skip_final_snapshot    = true\n"
                    ],
                    [
                        216,
                        "\n"
                    ],
                    [
                        217,
                        "  tags = {\n"
                    ],
                    [
                        218,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        219,
                        "    Name = \"mysql-db\"\n"
                    ],
                    [
                        220,
                        "  }\n"
                    ],
                    [
                        221,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    205,
                    221
                ],
                "resource": "aws_db_instance.mysql",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.RDSEncryption",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "mysql-db",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-4",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "breadcrumbs": {
                    "db_subnet_group_name": [
                        {
                            "type": "resource",
                            "name": "aws_db_subnet_group.main",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_130",
                "bc_check_id": "BC_AWS_NETWORKING_53",
                "check_name": "Ensure VPC subnets do not assign public IP by default",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "map_public_ip_on_launch"
                    ]
                },
                "code_block": [
                    [
                        14,
                        "resource \"aws_subnet\" \"public_subnet\" {\n"
                    ],
                    [
                        15,
                        "  count = 2\n"
                    ],
                    [
                        16,
                        "  vpc_id                  = aws_vpc.main_vpc.id\n"
                    ],
                    [
                        17,
                        "  cidr_block              = \"10.0.${count.index}.0/24\"\n"
                    ],
                    [
                        18,
                        "  availability_zone       = data.aws_availability_zones.available.names[count.index]\n"
                    ],
                    [
                        19,
                        "  map_public_ip_on_launch = true\n"
                    ],
                    [
                        20,
                        "\n"
                    ],
                    [
                        21,
                        "  tags = {\n"
                    ],
                    [
                        22,
                        "    Owner = \"mani\"\n"
                    ],
                    [
                        23,
                        "    Name = \"public-subnet-${count.index}\"\n"
                    ],
                    [
                        24,
                        "  }\n"
                    ],
                    [
                        25,
                        "}\n"
                    ]
                ],
                "file_path": "/Day2/Task3/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day2/Task3/main.tf",
                "file_line_range": [
                    14,
                    25
                ],
                "resource": "aws_subnet.public_subnet[1]",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SubnetPublicIP",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "public-subnet-1",
                    "Owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-vpc-subnets-do-not-assign-public-ip-by-default",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day2/Task3/main.tf"
            },
            {
                "check_id": "CKV_AWS_28",
                "bc_check_id": "BC_AWS_GENERAL_6",
                "check_name": "Ensure DynamoDB point in time recovery (backup) is enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "point_in_time_recovery/[0]/enabled"
                    ]
                },
                "code_block": [
                    [
                        63,
                        "resource \"aws_dynamodb_table\" \"mani_tf_backend_lock\" {\n"
                    ],
                    [
                        64,
                        "    name           = \"mani-tf-backend-lock\"\n"
                    ],
                    [
                        65,
                        "    billing_mode   = \"PAY_PER_REQUEST\"\n"
                    ],
                    [
                        66,
                        "    hash_key       = \"LockID\"\n"
                    ],
                    [
                        67,
                        "    attribute {\n"
                    ],
                    [
                        68,
                        "        name = \"LockID\"\n"
                    ],
                    [
                        69,
                        "        type = \"S\"\n"
                    ],
                    [
                        70,
                        "    }\n"
                    ],
                    [
                        71,
                        "    tags = local.common_tags\n"
                    ],
                    [
                        72,
                        "}\n"
                    ]
                ],
                "file_path": "/Day3/Task4_Pre/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day3/Task4_Pre/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day3/Task4_Pre/main.tf",
                "file_line_range": [
                    63,
                    72
                ],
                "resource": "aws_dynamodb_table.mani_tf_backend_lock",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.DynamodbRecovery",
                "fixed_definition": null,
                "entity_tags": {
                    "created_by": "terraform",
                    "owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/general-6",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day3/Task4_Pre/main.tf",
                "breadcrumbs": {
                    "tags": [
                        {
                            "type": "locals",
                            "name": "common_tags",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day3/Task4_Pre/main.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_119",
                "bc_check_id": "BC_AWS_GENERAL_52",
                "check_name": "Ensure DynamoDB Tables are encrypted using a KMS Customer Managed CMK",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "server_side_encryption/[0]/enabled",
                        "server_side_encryption/[0]/kms_key_arn"
                    ]
                },
                "code_block": [
                    [
                        63,
                        "resource \"aws_dynamodb_table\" \"mani_tf_backend_lock\" {\n"
                    ],
                    [
                        64,
                        "    name           = \"mani-tf-backend-lock\"\n"
                    ],
                    [
                        65,
                        "    billing_mode   = \"PAY_PER_REQUEST\"\n"
                    ],
                    [
                        66,
                        "    hash_key       = \"LockID\"\n"
                    ],
                    [
                        67,
                        "    attribute {\n"
                    ],
                    [
                        68,
                        "        name = \"LockID\"\n"
                    ],
                    [
                        69,
                        "        type = \"S\"\n"
                    ],
                    [
                        70,
                        "    }\n"
                    ],
                    [
                        71,
                        "    tags = local.common_tags\n"
                    ],
                    [
                        72,
                        "}\n"
                    ]
                ],
                "file_path": "/Day3/Task4_Pre/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day3/Task4_Pre/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Day3/Task4_Pre/main.tf",
                "file_line_range": [
                    63,
                    72
                ],
                "resource": "aws_dynamodb_table.mani_tf_backend_lock",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.DynamoDBTablesEncrypted",
                "fixed_definition": null,
                "entity_tags": {
                    "created_by": "terraform",
                    "owner": "mani"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-52",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day3/Task4_Pre/main.tf",
                "breadcrumbs": {
                    "tags": [
                        {
                            "type": "locals",
                            "name": "common_tags",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Day3/Task4_Pre/main.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AZURE_33",
                "bc_check_id": "BC_AZR_LOGGING_4",
                "check_name": "Ensure Storage logging is enabled for Queue service for read, write and delete requests",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "account_kind"
                    ]
                },
                "code_block": [
                    [
                        18,
                        "resource \"azurerm_storage_account\" \"mani-storage\" {\n"
                    ],
                    [
                        19,
                        "  name                     = \"manistorageaccount\"\n"
                    ],
                    [
                        20,
                        "  resource_group_name      = azurerm_resource_group.mani-rg.name\n"
                    ],
                    [
                        21,
                        "  location                 = azurerm_resource_group.mani-rg.location\n"
                    ],
                    [
                        22,
                        "  account_tier             = \"Standard\"\n"
                    ],
                    [
                        23,
                        "  account_replication_type = \"LRS\"\n"
                    ],
                    [
                        24,
                        "\n"
                    ],
                    [
                        25,
                        "  tags = {\n"
                    ],
                    [
                        26,
                        "    environment = \"test\"\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_azure/mani.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "file_line_range": [
                    18,
                    28
                ],
                "resource": "azurerm_storage_account.mani-storage",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.azure.StorageAccountLoggingQueueServiceEnabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-logging-policies/enable-requests-on-storage-logging-for-queue-service",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "breadcrumbs": {
                    "location": [
                        {
                            "type": "resource",
                            "name": "azurerm_resource_group.mani-rg",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                            "module_connection": false
                        }
                    ],
                    "resource_group_name": [
                        {
                            "type": "resource",
                            "name": "azurerm_resource_group.mani-rg",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AZURE_59",
                "bc_check_id": "BC_AZR_NETWORKING_18",
                "check_name": "Ensure that Storage accounts disallow public access",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "public_network_access_enabled"
                    ]
                },
                "code_block": [
                    [
                        18,
                        "resource \"azurerm_storage_account\" \"mani-storage\" {\n"
                    ],
                    [
                        19,
                        "  name                     = \"manistorageaccount\"\n"
                    ],
                    [
                        20,
                        "  resource_group_name      = azurerm_resource_group.mani-rg.name\n"
                    ],
                    [
                        21,
                        "  location                 = azurerm_resource_group.mani-rg.location\n"
                    ],
                    [
                        22,
                        "  account_tier             = \"Standard\"\n"
                    ],
                    [
                        23,
                        "  account_replication_type = \"LRS\"\n"
                    ],
                    [
                        24,
                        "\n"
                    ],
                    [
                        25,
                        "  tags = {\n"
                    ],
                    [
                        26,
                        "    environment = \"test\"\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_azure/mani.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "file_line_range": [
                    18,
                    28
                ],
                "resource": "azurerm_storage_account.mani-storage",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.azure.StorageAccountDisablePublicAccess",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-networking-policies/ensure-that-storage-accounts-disallow-public-access",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "breadcrumbs": {
                    "location": [
                        {
                            "type": "resource",
                            "name": "azurerm_resource_group.mani-rg",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                            "module_connection": false
                        }
                    ],
                    "resource_group_name": [
                        {
                            "type": "resource",
                            "name": "azurerm_resource_group.mani-rg",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AZURE_244",
                "bc_check_id": null,
                "check_name": "Avoid the use of local users for Azure Storage unless necessary",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "local_user_enabled"
                    ]
                },
                "code_block": [
                    [
                        18,
                        "resource \"azurerm_storage_account\" \"mani-storage\" {\n"
                    ],
                    [
                        19,
                        "  name                     = \"manistorageaccount\"\n"
                    ],
                    [
                        20,
                        "  resource_group_name      = azurerm_resource_group.mani-rg.name\n"
                    ],
                    [
                        21,
                        "  location                 = azurerm_resource_group.mani-rg.location\n"
                    ],
                    [
                        22,
                        "  account_tier             = \"Standard\"\n"
                    ],
                    [
                        23,
                        "  account_replication_type = \"LRS\"\n"
                    ],
                    [
                        24,
                        "\n"
                    ],
                    [
                        25,
                        "  tags = {\n"
                    ],
                    [
                        26,
                        "    environment = \"test\"\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_azure/mani.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "file_line_range": [
                    18,
                    28
                ],
                "resource": "azurerm_storage_account.mani-storage",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.azure.StorageLocalUsers",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": {},
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": null,
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "breadcrumbs": {
                    "location": [
                        {
                            "type": "resource",
                            "name": "azurerm_resource_group.mani-rg",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                            "module_connection": false
                        }
                    ],
                    "resource_group_name": [
                        {
                            "type": "resource",
                            "name": "azurerm_resource_group.mani-rg",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AZURE_44",
                "bc_check_id": "BC_AZR_STORAGE_2",
                "check_name": "Ensure Storage Account is using the latest version of TLS encryption",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "min_tls_version"
                    ]
                },
                "code_block": [
                    [
                        18,
                        "resource \"azurerm_storage_account\" \"mani-storage\" {\n"
                    ],
                    [
                        19,
                        "  name                     = \"manistorageaccount\"\n"
                    ],
                    [
                        20,
                        "  resource_group_name      = azurerm_resource_group.mani-rg.name\n"
                    ],
                    [
                        21,
                        "  location                 = azurerm_resource_group.mani-rg.location\n"
                    ],
                    [
                        22,
                        "  account_tier             = \"Standard\"\n"
                    ],
                    [
                        23,
                        "  account_replication_type = \"LRS\"\n"
                    ],
                    [
                        24,
                        "\n"
                    ],
                    [
                        25,
                        "  tags = {\n"
                    ],
                    [
                        26,
                        "    environment = \"test\"\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_azure/mani.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "file_line_range": [
                    18,
                    28
                ],
                "resource": "azurerm_storage_account.mani-storage",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.azure.StorageAccountMinimumTlsVersion",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-storage-policies/bc-azr-storage-2",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "breadcrumbs": {
                    "location": [
                        {
                            "type": "resource",
                            "name": "azurerm_resource_group.mani-rg",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                            "module_connection": false
                        }
                    ],
                    "resource_group_name": [
                        {
                            "type": "resource",
                            "name": "azurerm_resource_group.mani-rg",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AZURE_206",
                "bc_check_id": "BC_AZR_GENERAL_111",
                "check_name": "Ensure that Storage Accounts use replication",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "account_replication_type"
                    ]
                },
                "code_block": [
                    [
                        18,
                        "resource \"azurerm_storage_account\" \"mani-storage\" {\n"
                    ],
                    [
                        19,
                        "  name                     = \"manistorageaccount\"\n"
                    ],
                    [
                        20,
                        "  resource_group_name      = azurerm_resource_group.mani-rg.name\n"
                    ],
                    [
                        21,
                        "  location                 = azurerm_resource_group.mani-rg.location\n"
                    ],
                    [
                        22,
                        "  account_tier             = \"Standard\"\n"
                    ],
                    [
                        23,
                        "  account_replication_type = \"LRS\"\n"
                    ],
                    [
                        24,
                        "\n"
                    ],
                    [
                        25,
                        "  tags = {\n"
                    ],
                    [
                        26,
                        "    environment = \"test\"\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_azure/mani.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "file_line_range": [
                    18,
                    28
                ],
                "resource": "azurerm_storage_account.mani-storage",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.azure.StorageAccountsUseReplication",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-general-policies/azr-general-206",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "breadcrumbs": {
                    "location": [
                        {
                            "type": "resource",
                            "name": "azurerm_resource_group.mani-rg",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                            "module_connection": false
                        }
                    ],
                    "resource_group_name": [
                        {
                            "type": "resource",
                            "name": "azurerm_resource_group.mani-rg",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AZURE_190",
                "bc_check_id": "BC_AZR_NETWORKING_72",
                "check_name": "Ensure that Storage blobs restrict public access",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "allow_nested_items_to_be_public"
                    ]
                },
                "code_block": [
                    [
                        18,
                        "resource \"azurerm_storage_account\" \"mani-storage\" {\n"
                    ],
                    [
                        19,
                        "  name                     = \"manistorageaccount\"\n"
                    ],
                    [
                        20,
                        "  resource_group_name      = azurerm_resource_group.mani-rg.name\n"
                    ],
                    [
                        21,
                        "  location                 = azurerm_resource_group.mani-rg.location\n"
                    ],
                    [
                        22,
                        "  account_tier             = \"Standard\"\n"
                    ],
                    [
                        23,
                        "  account_replication_type = \"LRS\"\n"
                    ],
                    [
                        24,
                        "\n"
                    ],
                    [
                        25,
                        "  tags = {\n"
                    ],
                    [
                        26,
                        "    environment = \"test\"\n"
                    ],
                    [
                        27,
                        "  }\n"
                    ],
                    [
                        28,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_azure/mani.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "file_line_range": [
                    18,
                    28
                ],
                "resource": "azurerm_storage_account.mani-storage",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.azure.StorageBlobRestrictPublicAccess",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/azure-policies/azure-networking-policies/azr-networking-190",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                "breadcrumbs": {
                    "location": [
                        {
                            "type": "resource",
                            "name": "azurerm_resource_group.mani-rg",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                            "module_connection": false
                        }
                    ],
                    "resource_group_name": [
                        {
                            "type": "resource",
                            "name": "azurerm_resource_group.mani-rg",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_azure/mani.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_TF_1",
                "bc_check_id": "BC_CROSS_1",
                "check_name": "Ensure Terraform module sources use a commit hash",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        12,
                        "module \"network\" {\n"
                    ],
                    [
                        13,
                        "  source             = \"https://gitlab.presidio.com/manibharathim/PresidioTraining/\"\n"
                    ],
                    [
                        14,
                        "  vpc_cidr           = var.vpc_cidr\n"
                    ],
                    [
                        15,
                        "  public_subnets     = var.public_subnets\n"
                    ],
                    [
                        16,
                        "  private_subnets    = var.private_subnets\n"
                    ],
                    [
                        17,
                        "  availability_zones = var.availability_zones\n"
                    ],
                    [
                        18,
                        "  Project            = var.Project\n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/mani.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/mani.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/mani.tf",
                "file_line_range": [
                    12,
                    19
                ],
                "resource": "network",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.module.generic.RevisionHash",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/supply-chain-policies/terraform-policies/ensure-terraform-module-sources-use-git-url-with-commit-hash-revision",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/mani.tf",
                "breadcrumbs": {
                    "availability_zones": [
                        {
                            "type": "tfvar",
                            "name": "availability_zones",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/terrafrom.auto.tfvars",
                            "module_connection": false
                        },
                        {
                            "type": "variable",
                            "name": "availability_zones",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/variables.tf",
                            "module_connection": false
                        }
                    ],
                    "Project": [
                        {
                            "type": "tfvar",
                            "name": "Project",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/terrafrom.auto.tfvars",
                            "module_connection": false
                        },
                        {
                            "type": "variable",
                            "name": "Project",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/variables.tf",
                            "module_connection": false
                        }
                    ],
                    "vpc_cidr": [
                        {
                            "type": "tfvar",
                            "name": "vpc_cidr",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/terrafrom.auto.tfvars",
                            "module_connection": false
                        },
                        {
                            "type": "variable",
                            "name": "vpc_cidr",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/variables.tf",
                            "module_connection": false
                        }
                    ],
                    "private_subnets": [
                        {
                            "type": "tfvar",
                            "name": "private_subnets",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/terrafrom.auto.tfvars",
                            "module_connection": false
                        },
                        {
                            "type": "variable",
                            "name": "private_subnets",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/variables.tf",
                            "module_connection": false
                        }
                    ],
                    "public_subnets": [
                        {
                            "type": "tfvar",
                            "name": "public_subnets",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/terrafrom.auto.tfvars",
                            "module_connection": false
                        },
                        {
                            "type": "variable",
                            "name": "public_subnets",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/variables.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_TF_2",
                "bc_check_id": "BC_CROSS_2",
                "check_name": "Ensure Terraform module sources use a tag with a version number",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": []
                },
                "code_block": [
                    [
                        12,
                        "module \"network\" {\n"
                    ],
                    [
                        13,
                        "  source             = \"https://gitlab.presidio.com/manibharathim/PresidioTraining/\"\n"
                    ],
                    [
                        14,
                        "  vpc_cidr           = var.vpc_cidr\n"
                    ],
                    [
                        15,
                        "  public_subnets     = var.public_subnets\n"
                    ],
                    [
                        16,
                        "  private_subnets    = var.private_subnets\n"
                    ],
                    [
                        17,
                        "  availability_zones = var.availability_zones\n"
                    ],
                    [
                        18,
                        "  Project            = var.Project\n"
                    ],
                    [
                        19,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/mani.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/mani.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/mani.tf",
                "file_line_range": [
                    12,
                    19
                ],
                "resource": "network",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.module.generic.RevisionVersionTag",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/supply-chain-policies/terraform-policies/ensure-terraform-module-sources-use-tag",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/mani.tf",
                "breadcrumbs": {
                    "availability_zones": [
                        {
                            "type": "tfvar",
                            "name": "availability_zones",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/terrafrom.auto.tfvars",
                            "module_connection": false
                        },
                        {
                            "type": "variable",
                            "name": "availability_zones",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/variables.tf",
                            "module_connection": false
                        }
                    ],
                    "Project": [
                        {
                            "type": "tfvar",
                            "name": "Project",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/terrafrom.auto.tfvars",
                            "module_connection": false
                        },
                        {
                            "type": "variable",
                            "name": "Project",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/variables.tf",
                            "module_connection": false
                        }
                    ],
                    "vpc_cidr": [
                        {
                            "type": "tfvar",
                            "name": "vpc_cidr",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/terrafrom.auto.tfvars",
                            "module_connection": false
                        },
                        {
                            "type": "variable",
                            "name": "vpc_cidr",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/variables.tf",
                            "module_connection": false
                        }
                    ],
                    "private_subnets": [
                        {
                            "type": "tfvar",
                            "name": "private_subnets",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/terrafrom.auto.tfvars",
                            "module_connection": false
                        },
                        {
                            "type": "variable",
                            "name": "private_subnets",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/variables.tf",
                            "module_connection": false
                        }
                    ],
                    "public_subnets": [
                        {
                            "type": "tfvar",
                            "name": "public_subnets",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/terrafrom.auto.tfvars",
                            "module_connection": false
                        },
                        {
                            "type": "variable",
                            "name": "public_subnets",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/variables.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_153",
                "bc_check_id": "BC_AWS_GENERAL_82",
                "check_name": "Autoscaling groups should supply tags to launch configurations",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "tag",
                        "tags"
                    ]
                },
                "code_block": [
                    [
                        3,
                        "resource \"aws_autoscaling_group\" \"main\" {\n"
                    ],
                    [
                        4,
                        "  desired_capacity    = var.desired_capacity\n"
                    ],
                    [
                        5,
                        "  max_size            = var.max_size\n"
                    ],
                    [
                        6,
                        "  min_size            = var.min_size\n"
                    ],
                    [
                        7,
                        "  vpc_zone_identifier = var.private_subnets\n"
                    ],
                    [
                        8,
                        "  target_group_arns   = [var.target_group_arn]\n"
                    ],
                    [
                        9,
                        "\n"
                    ],
                    [
                        10,
                        "  launch_template {\n"
                    ],
                    [
                        11,
                        "    id      = var.launch_template_id\n"
                    ],
                    [
                        12,
                        "    version = \"$Latest\"\n"
                    ],
                    [
                        13,
                        "  }\n"
                    ],
                    [
                        14,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/modules/auto_scaling_group/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/auto_scaling_group/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/auto_scaling_group/main.tf",
                "file_line_range": [
                    3,
                    14
                ],
                "resource": "aws_autoscaling_group.main",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.AutoScalingTagging",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/autoscaling-groups-should-supply-tags-to-launch-configurations",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/auto_scaling_group/main.tf",
                "breadcrumbs": {
                    "vpc_zone_identifier": [
                        {
                            "type": "variable",
                            "name": "private_subnets",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/auto_scaling_group/variables.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_79",
                "bc_check_id": "BC_AWS_GENERAL_31",
                "check_name": "Ensure Instance Metadata Service Version 1 is not enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "metadata_options/[0]/http_tokens"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_launch_template\" \"main\" {\n"
                    ],
                    [
                        2,
                        "  name          = var.template_name\n"
                    ],
                    [
                        3,
                        "  image_id      = var.ami_id\n"
                    ],
                    [
                        4,
                        "  instance_type = var.instance_type\n"
                    ],
                    [
                        5,
                        "  key_name      = var.key_name\n"
                    ],
                    [
                        6,
                        "  user_data     = base64encode(var.user_data)\n"
                    ],
                    [
                        7,
                        "  \n"
                    ],
                    [
                        8,
                        "  update_default_version = true \n"
                    ],
                    [
                        9,
                        "  network_interfaces {\n"
                    ],
                    [
                        10,
                        "    associate_public_ip_address = false\n"
                    ],
                    [
                        11,
                        "    subnet_id                   = var.subnet_id\n"
                    ],
                    [
                        12,
                        "  }\n"
                    ],
                    [
                        13,
                        "}"
                    ]
                ],
                "file_path": "/Try_modules/modules/ec2_template/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/ec2_template/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/ec2_template/main.tf",
                "file_line_range": [
                    1,
                    13
                ],
                "resource": "aws_launch_template.main",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.IMDSv1Disabled",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-general-31",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/ec2_template/main.tf"
            },
            {
                "check_id": "CKV_AWS_150",
                "bc_check_id": "BC_AWS_NETWORKING_62",
                "check_name": "Ensure that Load Balancer has deletion protection enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "enable_deletion_protection"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_lb\" \"main\" {\n"
                    ],
                    [
                        2,
                        "  name               = var.lb_name\n"
                    ],
                    [
                        3,
                        "  internal           = false\n"
                    ],
                    [
                        4,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        5,
                        "  security_groups    = var.security_groups\n"
                    ],
                    [
                        6,
                        "  subnets            = var.public_subnets\n"
                    ],
                    [
                        7,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/modules/load_balancer/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/main.tf",
                "file_line_range": [
                    1,
                    7
                ],
                "resource": "aws_lb.main",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LBDeletionProtection",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/bc-aws-150",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/main.tf",
                "breadcrumbs": {
                    "security_groups": [
                        {
                            "type": "variable",
                            "name": "security_groups",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/variables.tf",
                            "module_connection": false
                        }
                    ],
                    "subnets": [
                        {
                            "type": "variable",
                            "name": "public_subnets",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/variables.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_91",
                "bc_check_id": "BC_AWS_LOGGING_22",
                "check_name": "Ensure the ELBv2 (Application/Network) has access logging enabled",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "access_logs/0/enabled/0"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_lb\" \"main\" {\n"
                    ],
                    [
                        2,
                        "  name               = var.lb_name\n"
                    ],
                    [
                        3,
                        "  internal           = false\n"
                    ],
                    [
                        4,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        5,
                        "  security_groups    = var.security_groups\n"
                    ],
                    [
                        6,
                        "  subnets            = var.public_subnets\n"
                    ],
                    [
                        7,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/modules/load_balancer/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/main.tf",
                "file_line_range": [
                    1,
                    7
                ],
                "resource": "aws_lb.main",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ELBv2AccessLogs",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-logging-policies/bc-aws-logging-22",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/main.tf",
                "breadcrumbs": {
                    "security_groups": [
                        {
                            "type": "variable",
                            "name": "security_groups",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/variables.tf",
                            "module_connection": false
                        }
                    ],
                    "subnets": [
                        {
                            "type": "variable",
                            "name": "public_subnets",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/variables.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_131",
                "bc_check_id": "BC_AWS_NETWORKING_41",
                "check_name": "Ensure that ALB drops HTTP headers",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "drop_invalid_header_fields"
                    ]
                },
                "code_block": [
                    [
                        1,
                        "resource \"aws_lb\" \"main\" {\n"
                    ],
                    [
                        2,
                        "  name               = var.lb_name\n"
                    ],
                    [
                        3,
                        "  internal           = false\n"
                    ],
                    [
                        4,
                        "  load_balancer_type = \"application\"\n"
                    ],
                    [
                        5,
                        "  security_groups    = var.security_groups\n"
                    ],
                    [
                        6,
                        "  subnets            = var.public_subnets\n"
                    ],
                    [
                        7,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/modules/load_balancer/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/main.tf",
                "file_line_range": [
                    1,
                    7
                ],
                "resource": "aws_lb.main",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ALBDropHttpHeaders",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-that-alb-drops-http-headers",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/main.tf",
                "breadcrumbs": {
                    "security_groups": [
                        {
                            "type": "variable",
                            "name": "security_groups",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/variables.tf",
                            "module_connection": false
                        }
                    ],
                    "subnets": [
                        {
                            "type": "variable",
                            "name": "public_subnets",
                            "path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/variables.tf",
                            "module_connection": false
                        }
                    ]
                }
            },
            {
                "check_id": "CKV_AWS_378",
                "bc_check_id": null,
                "check_name": "Ensure AWS Load Balancer doesn't use HTTP protocol",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "protocol"
                    ]
                },
                "code_block": [
                    [
                        9,
                        "resource \"aws_lb_target_group\" \"main\" {\n"
                    ],
                    [
                        10,
                        "  name     = var.target_group_name\n"
                    ],
                    [
                        11,
                        "  port     = var.target_port\n"
                    ],
                    [
                        12,
                        "  protocol = \"HTTP\"\n"
                    ],
                    [
                        13,
                        "  vpc_id   = var.vpc_id\n"
                    ],
                    [
                        14,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/modules/load_balancer/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/main.tf",
                "file_line_range": [
                    9,
                    14
                ],
                "resource": "aws_lb_target_group.main",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LBTargetGroup",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": {},
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": null,
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/main.tf"
            },
            {
                "check_id": "CKV_AWS_261",
                "bc_check_id": "BC_AWS_GENERAL_177",
                "check_name": "Ensure HTTP HTTPS Target group defines Healthcheck",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "health_check"
                    ]
                },
                "code_block": [
                    [
                        9,
                        "resource \"aws_lb_target_group\" \"main\" {\n"
                    ],
                    [
                        10,
                        "  name     = var.target_group_name\n"
                    ],
                    [
                        11,
                        "  port     = var.target_port\n"
                    ],
                    [
                        12,
                        "  protocol = \"HTTP\"\n"
                    ],
                    [
                        13,
                        "  vpc_id   = var.vpc_id\n"
                    ],
                    [
                        14,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/modules/load_balancer/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/main.tf",
                "file_line_range": [
                    9,
                    14
                ],
                "resource": "aws_lb_target_group.main",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.LBTargetGroupsDefinesHealthcheck",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-general-policies/ensure-aws-kendra-index-server-side-encryption-uses-customer-managed-keys-cmks",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/main.tf"
            },
            {
                "check_id": "CKV_AWS_2",
                "bc_check_id": "BC_AWS_NETWORKING_29",
                "check_name": "Ensure ALB protocol is HTTPS",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "protocol"
                    ]
                },
                "code_block": [
                    [
                        16,
                        "resource \"aws_lb_listener\" \"http\" {\n"
                    ],
                    [
                        17,
                        "  load_balancer_arn = aws_lb.main.arn\n"
                    ],
                    [
                        18,
                        "  port              = var.listener_port\n"
                    ],
                    [
                        19,
                        "  protocol          = \"HTTP\"\n"
                    ],
                    [
                        20,
                        "\n"
                    ],
                    [
                        21,
                        "  default_action {\n"
                    ],
                    [
                        22,
                        "    type             = \"forward\"\n"
                    ],
                    [
                        23,
                        "    target_group_arn = aws_lb_target_group.main.arn\n"
                    ],
                    [
                        24,
                        "  }\n"
                    ],
                    [
                        25,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/modules/load_balancer/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/main.tf",
                "file_line_range": [
                    16,
                    25
                ],
                "resource": "aws_lb_listener.http",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.ALBListenerHTTPS",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-29",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/load_balancer/main.tf"
            },
            {
                "check_id": "CKV_AWS_23",
                "bc_check_id": "BC_AWS_NETWORKING_31",
                "check_name": "Ensure every security group and rule has a description",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "description",
                        "egress/[0]",
                        "ingress/[0]"
                    ]
                },
                "code_block": [
                    [
                        96,
                        "resource \"aws_security_group\" \"ec2-sg\" {\n"
                    ],
                    [
                        97,
                        "  vpc_id = aws_vpc.main.id\n"
                    ],
                    [
                        98,
                        "  name   = \"${var.Project}-ec2-sg\"\n"
                    ],
                    [
                        99,
                        "  description = \"Allow 80 and 22\"\n"
                    ],
                    [
                        100,
                        "  ingress {\n"
                    ],
                    [
                        101,
                        "    from_port   = 80\n"
                    ],
                    [
                        102,
                        "    to_port     = 80\n"
                    ],
                    [
                        103,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        104,
                        "    cidr_blocks = [aws_security_group.lb-sg.id]\n"
                    ],
                    [
                        105,
                        "  }\n"
                    ],
                    [
                        106,
                        "  ingress {\n"
                    ],
                    [
                        107,
                        "    from_port   = 22\n"
                    ],
                    [
                        108,
                        "    to_port     = 22\n"
                    ],
                    [
                        109,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        110,
                        "    cidr_blocks = [aws_security_group.bastion-sg.id]\n"
                    ],
                    [
                        111,
                        "  }\n"
                    ],
                    [
                        112,
                        "  egress {\n"
                    ],
                    [
                        113,
                        "    from_port   = 0\n"
                    ],
                    [
                        114,
                        "    to_port     = 0\n"
                    ],
                    [
                        115,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        116,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        117,
                        "  }\n"
                    ],
                    [
                        118,
                        "  depends_on = [aws_security_group.lb-sg, aws_security_group.bastion-sg]\n"
                    ],
                    [
                        119,
                        "  tags = {\n"
                    ],
                    [
                        120,
                        "    Name = \"${var.Project}-ec2-sg\"\n"
                    ],
                    [
                        121,
                        "  }\n"
                    ],
                    [
                        122,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/modules/network/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "file_line_range": [
                    96,
                    122
                ],
                "resource": "aws_security_group.ec2-sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                "fixed_definition": null,
                "entity_tags": {
                    "Name": "${var.Project}-ec2-sg"
                },
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf"
            },
            {
                "check_id": "CKV_AWS_260",
                "bc_check_id": "BC_AWS_NETWORKING_67",
                "check_name": "Ensure no security groups allow ingress from 0.0.0.0:0 to port 80",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "ingress/[0]/from_port",
                        "ingress/[0]/to_port",
                        "ingress/[0]/cidr_blocks",
                        "ingress/[0]/ipv6_cidr_blocks"
                    ]
                },
                "code_block": [
                    [
                        125,
                        "resource \"aws_security_group\" \"lb-sg\" {\n"
                    ],
                    [
                        126,
                        "  vpc_id = aws_vpc.main.id\n"
                    ],
                    [
                        127,
                        "  name   = \"${var.Project}-lb-sg\"\n"
                    ],
                    [
                        128,
                        "  description = \"Allow 80\"\n"
                    ],
                    [
                        129,
                        "  ingress {\n"
                    ],
                    [
                        130,
                        "    from_port   = 80\n"
                    ],
                    [
                        131,
                        "    to_port     = 80\n"
                    ],
                    [
                        132,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        133,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        134,
                        "  }\n"
                    ],
                    [
                        135,
                        "  egress {\n"
                    ],
                    [
                        136,
                        "    from_port   = 0\n"
                    ],
                    [
                        137,
                        "    to_port     = 0\n"
                    ],
                    [
                        138,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        139,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        140,
                        "  }\n"
                    ],
                    [
                        141,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/modules/network/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "file_line_range": [
                    125,
                    141
                ],
                "resource": "aws_security_group.lb-sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupUnrestrictedIngress80",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/ensure-aws-security-groups-do-not-allow-ingress-from-00000-to-port-80",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf"
            },
            {
                "check_id": "CKV_AWS_23",
                "bc_check_id": "BC_AWS_NETWORKING_31",
                "check_name": "Ensure every security group and rule has a description",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "description",
                        "egress/[0]",
                        "ingress/[0]"
                    ]
                },
                "code_block": [
                    [
                        125,
                        "resource \"aws_security_group\" \"lb-sg\" {\n"
                    ],
                    [
                        126,
                        "  vpc_id = aws_vpc.main.id\n"
                    ],
                    [
                        127,
                        "  name   = \"${var.Project}-lb-sg\"\n"
                    ],
                    [
                        128,
                        "  description = \"Allow 80\"\n"
                    ],
                    [
                        129,
                        "  ingress {\n"
                    ],
                    [
                        130,
                        "    from_port   = 80\n"
                    ],
                    [
                        131,
                        "    to_port     = 80\n"
                    ],
                    [
                        132,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        133,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        134,
                        "  }\n"
                    ],
                    [
                        135,
                        "  egress {\n"
                    ],
                    [
                        136,
                        "    from_port   = 0\n"
                    ],
                    [
                        137,
                        "    to_port     = 0\n"
                    ],
                    [
                        138,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        139,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        140,
                        "  }\n"
                    ],
                    [
                        141,
                        "}\n"
                    ]
                ],
                "file_path": "/Try_modules/modules/network/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "file_line_range": [
                    125,
                    141
                ],
                "resource": "aws_security_group.lb-sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf"
            },
            {
                "check_id": "CKV_AWS_23",
                "bc_check_id": "BC_AWS_NETWORKING_31",
                "check_name": "Ensure every security group and rule has a description",
                "check_result": {
                    "result": "FAILED",
                    "evaluated_keys": [
                        "description",
                        "egress/[0]",
                        "ingress/[0]"
                    ]
                },
                "code_block": [
                    [
                        144,
                        "resource \"aws_security_group\" \"bastion-sg\" {\n"
                    ],
                    [
                        145,
                        "  vpc_id = aws_vpc.main.id\n"
                    ],
                    [
                        146,
                        "  name   = \"${var.Project}-bastion-sg\"\n"
                    ],
                    [
                        147,
                        "  description = \"Allow 22\"\n"
                    ],
                    [
                        148,
                        "  ingress {\n"
                    ],
                    [
                        149,
                        "    from_port   = 22\n"
                    ],
                    [
                        150,
                        "    to_port     = 22\n"
                    ],
                    [
                        151,
                        "    protocol    = \"tcp\"\n"
                    ],
                    [
                        152,
                        "    cidr_blocks = [\"18.206.107.24/29\"]\n"
                    ],
                    [
                        153,
                        "  }\n"
                    ],
                    [
                        154,
                        "  egress {\n"
                    ],
                    [
                        155,
                        "    from_port   = 0\n"
                    ],
                    [
                        156,
                        "    to_port     = 0\n"
                    ],
                    [
                        157,
                        "    protocol    = \"-1\"\n"
                    ],
                    [
                        158,
                        "    cidr_blocks = [\"0.0.0.0/0\"]\n"
                    ],
                    [
                        159,
                        "  }\n"
                    ],
                    [
                        160,
                        "}"
                    ]
                ],
                "file_path": "/Try_modules/modules/network/main.tf",
                "file_abs_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "repo_file_path": "/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf",
                "file_line_range": [
                    144,
                    160
                ],
                "resource": "aws_security_group.bastion-sg",
                "evaluations": null,
                "check_class": "checkov.terraform.checks.resource.aws.SecurityGroupRuleDescription",
                "fixed_definition": null,
                "entity_tags": null,
                "caller_file_path": null,
                "caller_file_line_range": null,
                "resource_address": null,
                "severity": null,
                "bc_category": null,
                "benchmarks": null,
                "description": null,
                "short_description": null,
                "vulnerability_details": null,
                "connected_node": null,
                "guideline": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/aws-policies/aws-networking-policies/networking-31",
                "details": [],
                "check_len": null,
                "definition_context_file_path": "/Users/manibharathi/Codestack/PresidioTraining/DevOpsTraning/Terraform/Try_modules/modules/network/main.tf"
            }
        ],
        "skipped_checks": [],
        "parsing_errors": []
    },
    "summary": {
        "passed": 66,
        "failed": 53,
        "skipped": 0,
        "parsing_errors": 0,
        "resource_count": 59,
        "checkov_version": "3.2.260"
    },
    "url": "Add an api key '--bc-api-key <api-key>' to see more detailed insights via https://bridgecrew.cloud"
}
